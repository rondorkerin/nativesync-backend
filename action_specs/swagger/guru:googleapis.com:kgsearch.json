{
  "type": "api",
  "key": "guru:googleapis.com:kgsearch",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Knowledge Graph Search API allows developers to search the Google Knowledge Graph for entities.",
    "title": "Knowledge Graph Search",
    "version": "v1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
    },
    "x-origin": {
      "format": "google",
      "url": "https://www.googleapis.com/discovery/v1/apis/kgsearch/v1/rest",
      "version": "v1"
    },
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "kgsearch"
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "kgsearch.googleapis.com",
    "basePath": "/",
    "info": {
      "contact": {
        "name": "Google",
        "url": "https://google.com"
      },
      "description": "Knowledge Graph Search API allows developers to search the Google Knowledge Graph for entities.",
      "title": "Knowledge Graph Search",
      "version": "v1",
      "x-apiClientRegistration": {
        "url": "https://console.developers.google.com"
      },
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
      },
      "x-origin": {
        "format": "google",
        "url": "https://www.googleapis.com/discovery/v1/apis/kgsearch/v1/rest",
        "version": "v1"
      },
      "x-preferred": true,
      "x-providerName": "googleapis.com",
      "x-serviceName": "kgsearch"
    },
    "externalDocs": {
      "url": "https://developers.google.com/knowledge-graph/"
    },
    "parameters": {
      "$.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "type": "string"
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "type": "string"
      },
      "alt": {
        "default": "json",
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "type": "string"
      },
      "bearer_token": {
        "description": "OAuth bearer token.",
        "in": "query",
        "name": "bearer_token",
        "type": "string"
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "type": "string"
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "type": "string"
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "type": "string"
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "type": "string"
      },
      "pp": {
        "default": true,
        "description": "Pretty-print response.",
        "in": "query",
        "name": "pp",
        "type": "boolean"
      },
      "prettyPrint": {
        "default": true,
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "type": "boolean"
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "type": "string"
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "type": "string"
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "type": "string"
      }
    },
    "tags": [
      {
        "name": "entities"
      }
    ],
    "paths": {
      "/v1/entities:search": {
        "get": {
          "description": "Searches Knowledge Graph for entities that match the constraints. A list of matched entities will be returned in response, which will be in JSON-LD format and compatible with http://schema.org",
          "operationId": "kgsearch.entities.search",
          "parameters": [
            {
              "description": "The literal query string for search.",
              "in": "query",
              "name": "query",
              "type": "string"
            },
            {
              "collectionFormat": "multi",
              "description": "The list of entity id to be used for search instead of query string.",
              "in": "query",
              "items": {
                "type": "string"
              },
              "name": "ids",
              "type": "array"
            },
            {
              "collectionFormat": "multi",
              "description": "The list of language codes (defined in ISO 693) to run the query with, e.g. 'en'.",
              "in": "query",
              "items": {
                "type": "string"
              },
              "name": "languages",
              "type": "array"
            },
            {
              "collectionFormat": "multi",
              "description": "Restricts returned entities with these types, e.g. Person (as defined in http://schema.org/Person).",
              "in": "query",
              "items": {
                "type": "string"
              },
              "name": "types",
              "type": "array"
            },
            {
              "description": "Enables indenting of json results.",
              "in": "query",
              "name": "indent",
              "type": "boolean"
            },
            {
              "description": "Enables prefix match against names and aliases of entities",
              "in": "query",
              "name": "prefix",
              "type": "boolean"
            },
            {
              "description": "Limits the number of entities to be returned.",
              "in": "query",
              "name": "limit",
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/SearchResponse"
              }
            }
          },
          "tags": [
            "entities"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ]
      }
    },
    "definitions": {
      "SearchResponse": {
        "description": "Response message includes the context and a list of matching results which contain the detail of associated entities.",
        "properties": {
          "context": {
            "description": "The local context applicable for the response. See more details at http://www.w3.org/TR/json-ld/#context-definitions."
          },
          "itemListElement": {
            "description": "The item list of search results.",
            "items": {},
            "type": "array"
          },
          "type": {
            "description": "The schema type of top-level JSON-LD object, e.g. ItemList."
          }
        },
        "type": "object"
      }
    }
  }
}