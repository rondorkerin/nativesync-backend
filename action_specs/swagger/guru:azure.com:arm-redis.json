{
  "type": "api",
  "key": "guru:azure.com:arm-redis",
  "info": {
    "description": "REST API for Azure Redis Cache Service.",
    "title": "RedisManagementClient",
    "version": "2016-04-01",
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-redis/2016-04-01/swagger/redis.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "arm-redis",
    "x-tags": [
      "Azure",
      "Microsoft"
    ]
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "management.azure.com",
    "info": {
      "description": "REST API for Azure Redis Cache Service.",
      "title": "RedisManagementClient",
      "version": "2016-04-01",
      "x-apisguru-categories": [
        "cloud"
      ],
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
      },
      "x-origin": {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-redis/2016-04-01/swagger/redis.json",
        "version": "2.0"
      },
      "x-preferred": true,
      "x-providerName": "azure.com",
      "x-serviceName": "arm-redis",
      "x-tags": [
        "Azure",
        "Microsoft"
      ]
    },
    "consumes": [
      "application/json",
      "text/json"
    ],
    "produces": [
      "application/json",
      "text/json"
    ],
    "securityDefinitions": {
      "azure_auth": {
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "description": "Azure Active Directory OAuth2 Flow.",
        "flow": "implicit",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        },
        "type": "oauth2"
      }
    },
    "security": [
      {
        "azure_auth": [
          "user_impersonation"
        ]
      }
    ],
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "type": "string"
      },
      "SubscriptionIdParameter": {
        "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "type": "string"
      }
    },
    "paths": {
      "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/Redis/": {
        "get": {
          "description": "Gets all Redis caches in the specified subscription.",
          "operationId": "Redis_List",
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisListResult"
              }
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/": {
        "get": {
          "description": "Lists all Redis caches in a resource group.",
          "operationId": "Redis_ListByResourceGroup",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisListResult"
              }
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}": {
        "delete": {
          "description": "Deletes a Redis cache.",
          "operationId": "Redis_Delete",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "204": {
              "description": ""
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-long-running-operation": true
        },
        "get": {
          "description": "Gets a Redis cache (resource description).",
          "operationId": "Redis_Get",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisResource"
              }
            }
          },
          "tags": [
            "Redis"
          ]
        },
        "patch": {
          "description": "Update an existing Redis cache.",
          "operationId": "Redis_Update",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Parameters supplied to the Update Redis operation.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RedisUpdateParameters"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisResource"
              }
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-long-running-operation": true
        },
        "put": {
          "description": "Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.",
          "operationId": "Redis_Create",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Parameters supplied to the Create Redis operation.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RedisCreateParameters"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisResource"
              }
            },
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisResource"
              }
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export": {
        "post": {
          "description": "Import data into Redis cache.",
          "operationId": "Redis_ExportData",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Parameters for Redis export operation.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ExportRDBParameters"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "202": {
              "description": ""
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot": {
        "post": {
          "description": "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.",
          "operationId": "Redis_ForceReboot",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Specifies which Redis node(s) to reboot.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RedisRebootParameters"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            },
            "204": {
              "description": ""
            }
          },
          "tags": [
            "Redis"
          ]
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import": {
        "post": {
          "description": "Import data into Redis cache.",
          "operationId": "Redis_ImportData",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Parameters for Redis import operation.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ImportRDBParameters"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "202": {
              "description": ""
            }
          },
          "tags": [
            "Redis"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listKeys": {
        "post": {
          "description": "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.",
          "operationId": "Redis_ListKeys",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Lists the keys for the specified Redis cache.",
              "schema": {
                "$ref": "#/definitions/RedisAccessKeys"
              }
            }
          },
          "tags": [
            "Redis"
          ]
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default": {
        "delete": {
          "description": "Deletes the patching schedule for Redis cache.",
          "operationId": "PatchSchedules_Delete",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "Redis"
          ]
        },
        "get": {
          "description": "Gets the patching schedule for Redis cache.",
          "operationId": "PatchSchedules_Get",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Response of Get patch schedules.",
              "schema": {
                "$ref": "#/definitions/RedisPatchSchedule"
              }
            },
            "404": {
              "description": "Response if patch schedules does not exist."
            }
          },
          "tags": [
            "Redis"
          ]
        },
        "put": {
          "description": "Create or replace the patching schedule for Redis cache.",
          "operationId": "PatchSchedules_CreateOrUpdate",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Parameters to set patch schedules for Redis cache.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RedisPatchSchedule"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/RedisPatchSchedule"
              }
            }
          },
          "tags": [
            "Redis"
          ]
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/regenerateKey": {
        "post": {
          "description": "Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.",
          "operationId": "Redis_RegenerateKey",
          "parameters": [
            {
              "description": "The name of the resource group.",
              "in": "path",
              "name": "resourceGroupName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Redis cache.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "description": "Specifies which key to regenerate.",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RedisRegenerateKeyParameters"
              }
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Lists the regenerated keys for Redis Cache",
              "schema": {
                "$ref": "#/definitions/RedisAccessKeys"
              }
            }
          },
          "tags": [
            "Redis"
          ]
        }
      }
    },
    "definitions": {
      "ExportRDBParameters": {
        "description": "Parameters for Redis export operation.",
        "properties": {
          "container": {
            "description": "Container name to export to.",
            "type": "string"
          },
          "format": {
            "description": "File format.",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix to use for exported files.",
            "type": "string"
          }
        },
        "required": [
          "container",
          "prefix"
        ]
      },
      "ImportRDBParameters": {
        "description": "Parameters for Redis import operation.",
        "properties": {
          "files": {
            "description": "files to import.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "format": {
            "description": "File format.",
            "type": "string"
          }
        },
        "required": [
          "files"
        ]
      },
      "RedisAccessKeys": {
        "description": "Redis cache access keys.",
        "properties": {
          "primaryKey": {
            "description": "The current primary key that clients can use to authenticate with Redis cache.",
            "readOnly": true,
            "type": "string"
          },
          "secondaryKey": {
            "description": "The current secondary key that clients can use to authenticate with Redis cache.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "RedisCreateParameters": {
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ],
        "description": "Parameters supplied to the Create Redis operation.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/RedisCreateProperties",
            "description": "Redis cache properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ]
      },
      "RedisCreateProperties": {
        "allOf": [
          {
            "$ref": "#/definitions/RedisProperties"
          }
        ],
        "description": "Properties supplied to Create Redis operation.",
        "properties": {
          "sku": {
            "$ref": "#/definitions/Sku",
            "description": "The SKU of the Redis cache to deploy."
          }
        },
        "required": [
          "sku"
        ]
      },
      "RedisListResult": {
        "description": "The response of list Redis operation.",
        "properties": {
          "nextLink": {
            "description": "Link for next set of locations.",
            "type": "string"
          },
          "value": {
            "description": "List of Redis cache instances.",
            "items": {
              "$ref": "#/definitions/RedisResource"
            },
            "type": "array"
          }
        }
      },
      "RedisPatchSchedule": {
        "description": "Response to put/get patch schedules for Redis cache.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/definitions/ScheduleEntries",
            "description": "List of patch schedules for a Redis cache.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "properties"
        ]
      },
      "RedisProperties": {
        "description": "Properties supplied to Create or Update Redis operation.",
        "properties": {
          "RedisConfiguration": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.",
            "type": "object"
          },
          "enableNonSslPort": {
            "description": "Specifies whether the non-ssl Redis server port (6379) is enabled.",
            "type": "boolean"
          },
          "shardCount": {
            "description": "The number of shards to be created on a Premium Cluster Cache.",
            "format": "int32",
            "type": "integer"
          },
          "staticIP": {
            "description": "Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.",
            "pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$",
            "type": "string"
          },
          "subnetId": {
            "description": "The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1",
            "pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$",
            "type": "string"
          },
          "tenantSettings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "tenantSettings",
            "type": "object"
          }
        },
        "x-ms-external": true
      },
      "RedisRebootParameters": {
        "description": "Specifies which Redis node(s) to reboot.",
        "properties": {
          "rebootType": {
            "description": "Which Redis node(s) to reboot. Depending on this value data loss is possible.",
            "enum": [
              "PrimaryNode",
              "SecondaryNode",
              "AllNodes"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RebootType"
            }
          },
          "shardId": {
            "description": "If clustering is enabled, the ID of the shard to be rebooted.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "rebootType"
        ]
      },
      "RedisRegenerateKeyParameters": {
        "description": "Specifies which Redis access keys to reset.",
        "properties": {
          "keyType": {
            "description": "The Redis access key to regenerate.",
            "enum": [
              "Primary",
              "Secondary"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "RedisKeyType"
            }
          }
        },
        "required": [
          "keyType"
        ]
      },
      "RedisResource": {
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ],
        "description": "A single Redis item in List or Get Operation.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/RedisResourceProperties",
            "description": "Redis cache properties.",
            "x-ms-client-flatten": true
          }
        }
      },
      "RedisResourceProperties": {
        "description": "Parameters describing a Redis instance.",
        "properties": {
          "RedisVersion": {
            "description": "Redis version.",
            "readOnly": true,
            "type": "string"
          },
          "hostName": {
            "description": "Redis host name.",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "Redis non-SSL port.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "properties": {
            "$ref": "#/definitions/RedisCreateProperties",
            "x-ms-client-flatten": true
          },
          "provisioningState": {
            "description": "Redis instance provisioning status.",
            "readOnly": true,
            "type": "string"
          },
          "sslPort": {
            "description": "Redis SSL port.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "RedisUpdateParameters": {
        "description": "Parameters supplied to the Update Redis operation.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/RedisUpdateProperties",
            "description": "Redis cache properties.",
            "x-ms-client-flatten": true
          }
        }
      },
      "RedisUpdateProperties": {
        "allOf": [
          {
            "$ref": "#/definitions/RedisProperties"
          }
        ],
        "description": "Properties supplied to Update Redis operation.",
        "properties": {
          "sku": {
            "$ref": "#/definitions/Sku",
            "description": "The SKU of the Redis cache to deploy."
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          }
        }
      },
      "Resource": {
        "description": "The Resource definition.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "x-ms-azure-resource": true
      },
      "ScheduleEntries": {
        "description": "List of patch schedules for a Redis cache.",
        "properties": {
          "scheduleEntries": {
            "description": "List of patch schedules for a Redis cache.",
            "items": {
              "$ref": "#/definitions/ScheduleEntry"
            },
            "type": "array"
          }
        },
        "required": [
          "scheduleEntries"
        ]
      },
      "ScheduleEntry": {
        "description": "Patch schedule entry for a Premium Redis Cache.",
        "properties": {
          "dayOfWeek": {
            "description": "Day of the week when a cache can be patched.",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday",
              "Everyday",
              "Weekend"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DayOfWeek"
            }
          },
          "maintenanceWindow": {
            "description": "ISO8601 timespan specifying how much time cache patching can take. ",
            "format": "duration",
            "type": "string"
          },
          "startHourUtc": {
            "description": "Start hour after which cache patching can start.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "dayOfWeek",
          "startHourUtc"
        ]
      },
      "Sku": {
        "description": "SKU parameters supplied to the create Redis operation.",
        "properties": {
          "capacity": {
            "description": "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).",
            "format": "int32",
            "type": "integer"
          },
          "family": {
            "description": "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).",
            "enum": [
              "C",
              "P"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuFamily"
            }
          },
          "name": {
            "description": "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)",
            "enum": [
              "Basic",
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuName"
            }
          }
        },
        "required": [
          "name",
          "family",
          "capacity"
        ]
      }
    }
  }
}