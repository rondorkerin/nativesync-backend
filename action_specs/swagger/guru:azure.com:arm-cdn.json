{
  "type": "api",
  "key": "guru:azure.com:arm-cdn",
  "info": {
    "description": "Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.",
    "title": "CdnManagementClient",
    "version": "2016-10-02",
    "x-apisguru-categories": [
      "cloud",
      "hosting"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-cdn/2016-10-02/swagger/cdn.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "arm-cdn",
    "x-tags": [
      "Azure",
      "Microsoft",
      "CDN"
    ]
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "management.azure.com",
    "info": {
      "description": "Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.",
      "title": "CdnManagementClient",
      "version": "2016-10-02",
      "x-apisguru-categories": [
        "cloud",
        "hosting"
      ],
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
      },
      "x-origin": {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-cdn/2016-10-02/swagger/cdn.json",
        "version": "2.0"
      },
      "x-preferred": true,
      "x-providerName": "azure.com",
      "x-serviceName": "arm-cdn",
      "x-tags": [
        "Azure",
        "Microsoft",
        "CDN"
      ]
    },
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "azure_auth": {
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "description": "Azure Active Directory OAuth2 Flow.",
        "flow": "implicit",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        },
        "type": "oauth2"
      }
    },
    "security": [
      {
        "azure_auth": [
          "user_impersonation"
        ]
      }
    ],
    "parameters": {
      "apiVersionParameter": {
        "description": "Version of the API to be used with the client request. Current version is 2016-10-02.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "type": "string"
      },
      "resourceGroupNameParameter": {
        "description": "Name of the Resource group within the Azure subscription.",
        "in": "path",
        "maxLength": 90,
        "minLength": 1,
        "name": "resourceGroupName",
        "pattern": "^[-\\w\\._\\(\\)]+$",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "type": "string"
      }
    },
    "paths": {
      "/providers/Microsoft.Cdn/checkNameAvailability": {
        "post": {
          "description": "Check the availability of a resource name without creating the resource. This is needed for resources where name is globally unique, such as a CDN endpoint.",
          "operationId": "CheckNameAvailability",
          "parameters": [
            {
              "description": "Input to check.",
              "in": "body",
              "name": "checkNameAvailabilityInput",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CheckNameAvailabilityInput"
              }
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/CheckNameAvailabilityOutput"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "CheckNameAvailability"
          ]
        }
      },
      "/providers/Microsoft.Cdn/operations": {
        "get": {
          "description": "Lists all of the available CDN REST API operations.",
          "operationId": "ListOperations",
          "parameters": [
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/OperationListResult"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Operations"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/profiles": {
        "get": {
          "description": "Lists all the CDN profiles within an Azure subscription.",
          "operationId": "Profiles_List",
          "parameters": [
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ProfileListResult"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles": {
        "get": {
          "description": "Lists all the CDN profiles within a resource group.",
          "operationId": "Profiles_ListByResourceGroup",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ProfileListResult"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}": {
        "delete": {
          "description": "Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of all subresources including endpoints, origins and custom domains.",
          "operationId": "Profiles_Delete",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "202": {
              "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
            },
            "204": {
              "description": "No Content. The request has been accepted but the profile was not found."
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-ms-long-running-operation": true
        },
        "get": {
          "description": "Gets a CDN profile with the specified profile name under the specified subscription and resource group.",
          "operationId": "Profiles_Get",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ]
        },
        "patch": {
          "description": "Updates an existing CDN profile with the specified profile name under the specified subscription and resource group.",
          "operationId": "Profiles_Update",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Profile properties needed to update an existing profile.",
              "in": "body",
              "name": "profileUpdateParameters",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ProfileUpdateParameters"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "202": {
              "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-ms-long-running-operation": true
        },
        "put": {
          "description": "Creates a new CDN profile with a profile name under the specified subscription and resource group.",
          "operationId": "Profiles_Create",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Profile properties needed to create a new profile.",
              "in": "body",
              "name": "profile",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "201": {
              "description": "Created. The request has been fulfilled and a new profile has been created.",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "202": {
              "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints": {
        "get": {
          "description": "Lists existing CDN endpoints.",
          "operationId": "Endpoints_ListByProfile",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/EndpointListResult"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}": {
        "delete": {
          "description": "Deletes an existing CDN endpoint with the specified parameters.",
          "operationId": "Endpoints_Delete",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "202": {
              "description": "Accepted."
            },
            "204": {
              "description": "No Content."
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        },
        "get": {
          "description": "Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
          "operationId": "Endpoints_Get",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ]
        },
        "patch": {
          "description": "Updates an existing CDN endpoint with the specified parameters. Only tags and OriginHostHeader can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update custom domains, use the Update Custom Domain operation.",
          "operationId": "Endpoints_Update",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Endpoint update properties",
              "in": "body",
              "name": "endpointUpdateProperties",
              "required": true,
              "schema": {
                "$ref": "#/definitions/EndpointUpdateParameters"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "202": {
              "description": "Accepted and  the operation will complete asynchronously",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        },
        "put": {
          "description": "Creates a new CDN endpoint with the specified parameters.",
          "operationId": "Endpoints_Create",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Endpoint properties",
              "in": "body",
              "name": "endpoint",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "201": {
              "description": "Created. The request has been fulfilled and a new endpoint has been created.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "202": {
              "description": "Accepted and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains": {
        "get": {
          "description": "Lists the existing CDN custom domains within an endpoint.",
          "operationId": "CustomDomains_ListByEndpoint",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/CustomDomainListResult"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "CustomDomains"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}": {
        "delete": {
          "description": "Deletes an existing CDN custom domain within an endpoint.",
          "operationId": "CustomDomains_Delete",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the custom domain within an endpoint.",
              "in": "path",
              "name": "customDomainName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded."
            },
            "202": {
              "description": "Accepted and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/CustomDomain"
              }
            },
            "204": {
              "description": "No Content."
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "CustomDomains"
          ],
          "x-ms-long-running-operation": true
        },
        "get": {
          "description": "Gets an existing CDN custom domain within an endpoint.",
          "operationId": "CustomDomains_Get",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the custom domain within an endpoint.",
              "in": "path",
              "name": "customDomainName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/CustomDomain"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "CustomDomains"
          ]
        },
        "put": {
          "description": "Creates a new CDN custom domain within an endpoint.",
          "operationId": "CustomDomains_Create",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the custom domain within an endpoint.",
              "in": "path",
              "name": "customDomainName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Custom domain properties required for creation.",
              "in": "body",
              "name": "customDomainProperties",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CustomDomainParameters"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/CustomDomain"
              }
            },
            "201": {
              "description": "Created. The request has been fulfilled and a new custom domain has been created.",
              "schema": {
                "$ref": "#/definitions/CustomDomain"
              }
            },
            "202": {
              "description": "Accepted and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/CustomDomain"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "CustomDomains"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load": {
        "post": {
          "description": "Forcibly pre-loads CDN endpoint content. Available for Verizon Profiles.",
          "operationId": "Endpoints_LoadContent",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The path to the content to be loaded. Path should describe a file.",
              "in": "body",
              "name": "contentFilePaths",
              "required": true,
              "schema": {
                "$ref": "#/definitions/LoadParameters"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "202": {
              "description": "Accepted and the operation will complete asynchronously."
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins": {
        "get": {
          "description": "Lists the existing CDN origins within an endpoint.",
          "operationId": "Origins_ListByEndpoint",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/OriginListResult"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Origins"
          ],
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}": {
        "get": {
          "description": "Gets an existing CDN origin within an endpoint.",
          "operationId": "Origins_Get",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the origin which is unique within the endpoint.",
              "in": "path",
              "name": "originName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Origin"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Origins"
          ]
        },
        "patch": {
          "description": "Updates an existing CDN origin within an endpoint.",
          "operationId": "Origins_Update",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the origin which is unique within the endpoint.",
              "in": "path",
              "name": "originName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Origin properties",
              "in": "body",
              "name": "originUpdateProperties",
              "required": true,
              "schema": {
                "$ref": "#/definitions/OriginUpdateParameters"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Origin"
              }
            },
            "202": {
              "description": "Accepted and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/Origin"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Origins"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge": {
        "post": {
          "description": "Forcibly purges CDN endpoint content.",
          "operationId": "Endpoints_PurgeContent",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "The path to the content to be purged. Path can describe a file or directory using the wildcard. e.g. '/my/directory/*' or '/my/file.exe/'",
              "in": "body",
              "name": "contentFilePaths",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PurgeParameters"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "202": {
              "description": "Accepted and the operation will complete asynchronously."
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start": {
        "post": {
          "description": "Starts an existing stopped CDN endpoint.",
          "operationId": "Endpoints_Start",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "202": {
              "description": "Accepted and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop": {
        "post": {
          "description": "Stops an existing running CDN endpoint.",
          "operationId": "Endpoints_Stop",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "202": {
              "description": "Accepted and the operation will complete asynchronously.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ],
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain": {
        "post": {
          "description": "Validates a custom domain mapping to ensure it maps to the correct CNAME in DNS.",
          "operationId": "Endpoints_ValidateCustomDomain",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Name of the endpoint under the profile which is unique globally.",
              "in": "path",
              "name": "endpointName",
              "required": true,
              "type": "string"
            },
            {
              "description": "Custom domain to validate.",
              "in": "body",
              "name": "customDomainProperties",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ValidateCustomDomainInput"
              }
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ValidateCustomDomainOutput"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Endpoints"
          ]
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri": {
        "post": {
          "description": "Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemnetal portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.",
          "operationId": "Profiles_GenerateSsoUri",
          "parameters": [
            {
              "$ref": "#/parameters/resourceGroupNameParameter"
            },
            {
              "description": "Name of the CDN profile which is unique within the resource group.",
              "in": "path",
              "name": "profileName",
              "required": true,
              "type": "string"
            },
            {
              "$ref": "#/parameters/subscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/SsoUri"
              }
            },
            "default": {
              "description": "CDN error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "tags": [
            "Profiles"
          ]
        }
      }
    },
    "definitions": {
      "CheckNameAvailabilityInput": {
        "description": "Input of CheckNameAvailability API.",
        "properties": {
          "name": {
            "description": "The resource name to validate.",
            "type": "string"
          },
          "type": {
            "$ref": "#/definitions/ResourceType",
            "description": "The type of the resource whose name is to be validated."
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "CheckNameAvailabilityOutput": {
        "description": "Output of check name availability API.",
        "properties": {
          "message": {
            "description": "The detailed error message describing why the name is not available.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "Indicates whether the name is available.",
            "type": "boolean"
          },
          "reason": {
            "description": "The reason why the name is not available.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomDomain": {
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ],
        "description": "CDN CustomDomain represents a mapping between a user-specified domain name and a CDN endpoint. This is to use custom domain names to represent the URLs for branding purposes.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/CustomDomainProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "CustomDomainListResult": {
        "description": "Result of the request to list custom domains. It contains a list of custom domain objects and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of custom domain objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of CDN CustomDomains within an endpoint.",
            "items": {
              "$ref": "#/definitions/CustomDomain"
            },
            "type": "array"
          }
        }
      },
      "CustomDomainParameters": {
        "description": "The customDomain JSON object required for custom domain creation or update.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/CustomDomainPropertiesParameters",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "CustomDomainProperties": {
        "description": "The JSON object that contains the properties of the custom domain to create.",
        "properties": {
          "hostName": {
            "description": "The host name of the custom domain. Must be a domain name.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning status of the custom domain.",
            "readOnly": true,
            "type": "string"
          },
          "resourceState": {
            "description": "Resource status of the custom domain.",
            "enum": [
              "Creating",
              "Active",
              "Deleting"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CustomDomainResourceState"
            }
          },
          "validationData": {
            "description": "Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. (e.g. ICP license number of a custom domain is required to deliver content in China.)",
            "type": "string"
          }
        },
        "required": [
          "hostName"
        ]
      },
      "CustomDomainPropertiesParameters": {
        "description": "The JSON object that contains the properties of the custom domain to create.",
        "properties": {
          "hostName": {
            "description": "The host name of the custom domain. Must be a domain name.",
            "type": "string"
          }
        },
        "required": [
          "hostName"
        ]
      },
      "DeepCreatedOrigin": {
        "description": "Origins to be added when creating a CDN endpoint.",
        "properties": {
          "name": {
            "description": "Origin name",
            "type": "string"
          },
          "properties": {
            "$ref": "#/definitions/DeepCreatedOriginProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "DeepCreatedOriginProperties": {
        "description": "Properties of origins Properties of the origin created on the CDN endpoint.",
        "properties": {
          "hostName": {
            "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.",
            "type": "string"
          },
          "httpPort": {
            "description": "The value of the HTTP port. Must be between 1 and 65535",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "httpsPort": {
            "description": "The value of the HTTPS port. Must be between 1 and 65535",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "hostName"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Endpoint": {
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ],
        "description": "CDN endpoint is the entity within a CDN profile containing configuration information regarding caching behaviors and origins. The CDN endpoint is exposed using the URL format <endpointname>.azureedge.net by default, but custom domains can also be created.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/EndpointProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EndpointListResult": {
        "description": "Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of endpoint objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of CDN endpoints within a profile",
            "items": {
              "$ref": "#/definitions/Endpoint"
            },
            "type": "array"
          }
        }
      },
      "EndpointProperties": {
        "allOf": [
          {
            "$ref": "#/definitions/EndpointPropertiesUpdateParameters"
          }
        ],
        "description": "The JSON object that contains the properties of the endpoint to create.",
        "properties": {
          "hostName": {
            "description": "The host name of the endpoint {endpointName}.{DNSZone}",
            "readOnly": true,
            "type": "string"
          },
          "origins": {
            "description": "The set of origins for the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options.",
            "items": {
              "$ref": "#/definitions/DeepCreatedOrigin"
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "Provisioning status of the endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "resourceState": {
            "description": "Resource status of the endpoint.",
            "enum": [
              "Creating",
              "Deleting",
              "Running",
              "Starting",
              "Stopped",
              "Stopping"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EndpointResourceState"
            }
          }
        },
        "required": [
          "origins"
        ]
      },
      "EndpointPropertiesUpdateParameters": {
        "description": "Result of the request to list endpoints. It contains a list of endpoints and a URL link to get the next set of results.",
        "properties": {
          "contentTypesToCompress": {
            "description": "List of content types on which compression will be applied. The value for the elements should be a valid MIME type.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "geoFilters": {
            "description": "The list of geo filters for the CDN endpoint.",
            "items": {
              "$ref": "#/definitions/GeoFilter"
            },
            "type": "array"
          },
          "isCompressionEnabled": {
            "description": "Indicates whether content compression is enabled. The default value is false. If compression is enabled, the content transferred from the CDN endpoint to the end user will be compressed. The requested content must be larger than 1 byte and smaller than 1 MB.",
            "type": "boolean"
          },
          "isHttpAllowed": {
            "description": "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
            "type": "boolean"
          },
          "isHttpsAllowed": {
            "description": "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
            "type": "boolean"
          },
          "optimizationType": {
            "description": "Customer can specify what scenario they want this CDN endpoint to optimize. (e.g. Download, Media services, and etc.) With this information we can apply scenario driven optimization.",
            "type": "string"
          },
          "originHostHeader": {
            "description": "The host header the CDN provider will send along with content requests to origins. The default value is the host name of the origin.",
            "type": "string"
          },
          "originPath": {
            "description": "The path used for origin requests.",
            "type": "string"
          },
          "queryStringCachingBehavior": {
            "$ref": "#/definitions/QueryStringCachingBehavior",
            "description": "Defines the query string caching behavior"
          }
        }
      },
      "EndpointUpdateParameters": {
        "description": "Endpoint properties required for new endpoint creation.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/EndpointPropertiesUpdateParameters",
            "x-ms-client-flatten": true
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Endpoint tags.",
            "type": "object"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ErrorResponse": {
        "description": "Error reponse indicates CDN service is not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GeoFilter": {
        "description": "Geo filter of a CDN endpoint.",
        "properties": {
          "action": {
            "description": "Action of the geo filter.",
            "enum": [
              "Block",
              "Allow"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "GeoFilterActions"
            }
          },
          "countryCodes": {
            "description": "Two letter country codes of the geo filter. (e.g. AU, MX, and etc.)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "relativePath": {
            "description": "Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)",
            "type": "string"
          }
        },
        "required": [
          "relativePath",
          "action",
          "countryCodes"
        ],
        "type": "object"
      },
      "LoadParameters": {
        "description": "Parameters required for endpoint load.",
        "properties": {
          "contentPaths": {
            "description": "The path to the content to be loaded. Should describe a file path.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "contentPaths"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "CDN REST API operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Cdn",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                "type": "string"
              }
            }
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of CDN operations supported by the CDN resource provider.",
            "items": {
              "$ref": "#/definitions/Operation"
            },
            "type": "array"
          }
        }
      },
      "Origin": {
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ],
        "description": "CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/OriginProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "OriginListResult": {
        "description": "Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of origin objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of CDN origins within an endpoint",
            "items": {
              "$ref": "#/definitions/Origin"
            },
            "type": "array"
          }
        }
      },
      "OriginProperties": {
        "description": "The JSON object that contains the properties of the origin to create.",
        "properties": {
          "hostName": {
            "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.",
            "type": "string"
          },
          "httpPort": {
            "description": "The value of the HTTP port. Must be between 1 and 65535.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "httpsPort": {
            "description": "The value of the https port. Must be between 1 and 65535.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "provisioningState": {
            "description": "Provisioning status of the origin.",
            "readOnly": true,
            "type": "string"
          },
          "resourceState": {
            "description": "Resource status of the origin.",
            "enum": [
              "Creating",
              "Active",
              "Deleting"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OriginResourceState"
            }
          }
        },
        "required": [
          "hostName"
        ]
      },
      "OriginPropertiesParameters": {
        "description": "The JSON object that contains the properties of the origin to create.",
        "properties": {
          "hostName": {
            "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.",
            "type": "string"
          },
          "httpPort": {
            "description": "The value of the HTTP port. Must be between 1 and 65535.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "httpsPort": {
            "description": "The value of the HTTPS port. Must be between 1 and 65535.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          }
        }
      },
      "OriginUpdateParameters": {
        "description": "Origin properties needed for origin creation or update.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/OriginPropertiesParameters",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Profile": {
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ],
        "description": "CDN profile represents the top level resource and the entry point into the CDN API. This allows users to set up a logical grouping of endpoints in addition to creating shared configuration settings and selecting pricing tiers and providers.",
        "properties": {
          "properties": {
            "$ref": "#/definitions/ProfileProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/definitions/Sku",
            "description": "The SKU (pricing tier) of the CDN profile."
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "ProfileListResult": {
        "description": "Result of the request to list profiles. It contains a list of profile objects and a URL link to get the the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of profile objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of CDN profiles within a resource group.",
            "items": {
              "$ref": "#/definitions/Profile"
            },
            "type": "array"
          }
        }
      },
      "ProfileProperties": {
        "description": "The JSON object that contains the properties of the profile to create.",
        "properties": {
          "provisioningState": {
            "description": "Provisioning status of the profile.",
            "readOnly": true,
            "type": "string"
          },
          "resourceState": {
            "description": "Resource status of the profile.",
            "enum": [
              "Creating",
              "Active",
              "Deleting",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProfileResourceState"
            }
          }
        }
      },
      "ProfileUpdateParameters": {
        "description": "Profile properties required for profile update.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Profile tags",
            "type": "object"
          }
        },
        "required": [
          "tags"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "PurgeParameters": {
        "description": "Parameters required for endpoint purge.",
        "properties": {
          "contentPaths": {
            "description": "The path to the content to be purged. Can describe a file path or a wild card directory.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "contentPaths"
        ],
        "type": "object"
      },
      "QueryStringCachingBehavior": {
        "description": "Defines the query string caching behavior.",
        "enum": [
          "IgnoreQueryString",
          "BypassCaching",
          "UseQueryString",
          "NotSet"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "QueryStringCachingBehavior"
        }
      },
      "Resource": {
        "description": "The Resource definition.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "x-ms-azure-resource": true
      },
      "ResourceType": {
        "description": "Type of CDN resource used in CheckNameAvailability.",
        "enum": [
          "Microsoft.Cdn/Profiles/Endpoints"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "ResourceType"
        }
      },
      "Sku": {
        "description": "The SKU (pricing tier) of the CDN profile.",
        "properties": {
          "name": {
            "description": "Name of the pricing tier.",
            "enum": [
              "Standard_Verizon",
              "Premium_Verizon",
              "Custom_Verizon",
              "Standard_Akamai",
              "Standard_ChinaCdn"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuName"
            }
          }
        },
        "type": "object"
      },
      "SsoUri": {
        "description": "SSO URI required to login to third party web portal.",
        "properties": {
          "ssoUriValue": {
            "description": "The URI used to login to third party web portal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidateCustomDomainInput": {
        "description": "Input of the custom domain to be validated.",
        "properties": {
          "hostName": {
            "description": "The host name of the custom domain. Must be a domain name.",
            "type": "string"
          }
        },
        "required": [
          "hostName"
        ],
        "type": "object"
      },
      "ValidateCustomDomainOutput": {
        "description": "Output of custom domain validation.",
        "properties": {
          "customDomainValidated": {
            "description": "Indicates whether the custom domain is validated or not.",
            "type": "boolean"
          },
          "message": {
            "description": "The message describing why the custom domain is not valid.",
            "type": "string"
          },
          "reason": {
            "description": "The reason why the custom domain is not valid.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}