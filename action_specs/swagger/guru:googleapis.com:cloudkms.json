{
  "type": "api",
  "key": "guru:googleapis.com:cloudkms",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "title": "Google Cloud KMS",
    "version": "v1beta1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
    },
    "x-origin": {
      "format": "google",
      "url": "https://cloudkms.googleapis.com/$discovery/rest?version=v1beta1",
      "version": "v1"
    },
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "cloudkms"
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "cloudkms.googleapis.com",
    "basePath": "/",
    "info": {
      "contact": {
        "name": "Google",
        "url": "https://google.com"
      },
      "title": "Google Cloud KMS",
      "version": "v1beta1",
      "x-apiClientRegistration": {
        "url": "https://console.developers.google.com"
      },
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
      },
      "x-origin": {
        "format": "google",
        "url": "https://cloudkms.googleapis.com/$discovery/rest?version=v1beta1",
        "version": "v1"
      },
      "x-preferred": true,
      "x-providerName": "googleapis.com",
      "x-serviceName": "cloudkms"
    },
    "externalDocs": {
      "url": "https://cloud.google.com/kms/"
    },
    "securityDefinitions": {
      "Oauth2": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 authentication",
        "flow": "implicit",
        "scopes": {
          "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
        },
        "type": "oauth2"
      }
    },
    "parameters": {
      "$.xgafv": {
        "description": "V1 error format.",
        "enum": [
          "1",
          "2"
        ],
        "in": "query",
        "name": "$.xgafv",
        "type": "string"
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "type": "string"
      },
      "alt": {
        "default": "json",
        "description": "Data format for response.",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "in": "query",
        "name": "alt",
        "type": "string"
      },
      "bearer_token": {
        "description": "OAuth bearer token.",
        "in": "query",
        "name": "bearer_token",
        "type": "string"
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "type": "string"
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "type": "string"
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "type": "string"
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "type": "string"
      },
      "pp": {
        "default": true,
        "description": "Pretty-print response.",
        "in": "query",
        "name": "pp",
        "type": "boolean"
      },
      "prettyPrint": {
        "default": true,
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "type": "boolean"
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "type": "string"
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "type": "string"
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "type": "string"
      }
    },
    "tags": [
      {
        "name": "projects"
      }
    ],
    "paths": {
      "/v1beta1/{name}": {
        "get": {
          "description": "Returns metadata for a given CryptoKeyVersion.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get",
          "parameters": [
            {
              "description": "The name of the CryptoKeyVersion to get.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "patch": {
          "description": "Update a CryptoKeyVersion's metadata.\n\nstate may be changed between\nENABLED and\nDISABLED using this\nmethod. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to\nmove between other states.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
          "parameters": [
            {
              "description": "Output only. The resource name for this CryptoKeyVersion in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "Required list of fields to be updated in this request.",
              "in": "query",
              "name": "updateMask",
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{name}/locations": {
        "get": {
          "description": "Lists information about the supported locations for this service.",
          "operationId": "cloudkms.projects.locations.list",
          "parameters": [
            {
              "description": "The resource that owns the locations collection, if applicable.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "The standard list page size.",
              "in": "query",
              "name": "pageSize",
              "type": "integer"
            },
            {
              "description": "The standard list filter.",
              "in": "query",
              "name": "filter",
              "type": "string"
            },
            {
              "description": "The standard list page token.",
              "in": "query",
              "name": "pageToken",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListLocationsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ]
      },
      "/v1beta1/{name}:decrypt": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Decrypt data that was protected by Encrypt.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
          "parameters": [
            {
              "description": "Required. The resource name of the CryptoKey to use for decryption.\nThe server will choose the appropriate version.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/DecryptRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/DecryptResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{name}:destroy": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Schedule a CryptoKeyVersion for destruction.\n\nUpon calling this method, CryptoKeyVersion.state will be set to\nDESTROY_SCHEDULED\nand destroy_time will be set to a time 24\nhours in the future, at which point the state\nwill be changed to\nDESTROYED, and the key\nmaterial will be irrevocably destroyed.\n\nBefore the destroy_time is reached,\nRestoreCryptoKeyVersion may be called to reverse the process.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
          "parameters": [
            {
              "description": "The resource name of the CryptoKeyVersion to destroy.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/DestroyCryptoKeyVersionRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{name}:encrypt": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Encrypt data, so that it can only be recovered by a call to Decrypt.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
          "parameters": [
            {
              "description": "Required. The resource name of the CryptoKey or CryptoKeyVersion\nto use for encryption.\n\nIf a CryptoKey is specified, the server will use its\nprimary version.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/EncryptRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/EncryptResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{name}:restore": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Restore a CryptoKeyVersion in the\nDESTROY_SCHEDULED,\nstate.\n\nUpon restoration of the CryptoKeyVersion, state\nwill be set to DISABLED,\nand destroy_time will be cleared.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
          "parameters": [
            {
              "description": "The resource name of the CryptoKeyVersion to restore.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/RestoreCryptoKeyVersionRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{name}:updatePrimaryVersion": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Update the version of a CryptoKey that will be used in Encrypt",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
          "parameters": [
            {
              "description": "The resource name of the CryptoKey to update.",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/UpdateCryptoKeyPrimaryVersionRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKey"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{parent}/cryptoKeyVersions": {
        "get": {
          "description": "Lists CryptoKeyVersions.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
          "parameters": [
            {
              "description": "Required. The resource name of the CryptoKey to list, in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
              "in": "path",
              "name": "parent",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "Optional limit on the number of CryptoKeyVersions to\ninclude in the response. Further CryptoKeyVersions can\nsubsequently be obtained by including the\nListCryptoKeyVersionsResponse.next_page_token in a subsequent request.\nIf unspecified, the server will pick an appropriate default.",
              "in": "query",
              "name": "pageSize",
              "type": "integer"
            },
            {
              "description": "Optional pagination token, returned earlier via\nListCryptoKeyVersionsResponse.next_page_token.",
              "in": "query",
              "name": "pageToken",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListCryptoKeyVersionsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Create a new CryptoKeyVersion in a CryptoKey.\n\nThe server will assign the next sequential id. If unset,\nstate will be set to\nENABLED.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
          "parameters": [
            {
              "description": "Required. The name of the CryptoKey associated with\nthe CryptoKeyVersions.",
              "in": "path",
              "name": "parent",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKeyVersion"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{parent}/cryptoKeys": {
        "get": {
          "description": "Lists CryptoKeys.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.list",
          "parameters": [
            {
              "description": "Required. The resource name of the KeyRing to list, in the format\n`projects/*/locations/*/keyRings/*`.",
              "in": "path",
              "name": "parent",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "Optional limit on the number of CryptoKeys to include in the\nresponse.  Further CryptoKeys can subsequently be obtained by\nincluding the ListCryptoKeysResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.",
              "in": "query",
              "name": "pageSize",
              "type": "integer"
            },
            {
              "description": "Optional pagination token, returned earlier via\nListCryptoKeysResponse.next_page_token.",
              "in": "query",
              "name": "pageToken",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListCryptoKeysResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Create a new CryptoKey within a KeyRing.\n\nCryptoKey.purpose is required.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.create",
          "parameters": [
            {
              "description": "Required. The name of the KeyRing associated with the\nCryptoKeys.",
              "in": "path",
              "name": "parent",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "Required. It must be unique within a KeyRing and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
              "in": "query",
              "name": "cryptoKeyId",
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/CryptoKey"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/CryptoKey"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{parent}/keyRings": {
        "get": {
          "description": "Lists KeyRings.",
          "operationId": "cloudkms.projects.locations.keyRings.list",
          "parameters": [
            {
              "description": "Required. The resource name of the location associated with the\nKeyRings, in the format `projects/*/locations/*`.",
              "in": "path",
              "name": "parent",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "Optional limit on the number of KeyRings to include in the\nresponse.  Further KeyRings can subsequently be obtained by\nincluding the ListKeyRingsResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.",
              "in": "query",
              "name": "pageSize",
              "type": "integer"
            },
            {
              "description": "Optional pagination token, returned earlier via\nListKeyRingsResponse.next_page_token.",
              "in": "query",
              "name": "pageToken",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListKeyRingsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Create a new KeyRing in a given Project and Location.",
          "operationId": "cloudkms.projects.locations.keyRings.create",
          "parameters": [
            {
              "description": "Required. The resource name of the location associated with the\nKeyRings, in the format `projects/*/locations/*`.",
              "in": "path",
              "name": "parent",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "description": "Required. It must be unique within a location and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
              "in": "query",
              "name": "keyRingId",
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/KeyRing"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/KeyRing"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{resource}:getIamPolicy": {
        "get": {
          "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy is being requested.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ]
      },
      "/v1beta1/{resource}:setIamPolicy": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy is being specified.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/SetIamPolicyRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1beta1/{resource}:testIamPermissions": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          }
        ],
        "post": {
          "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.",
          "operationId": "cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy detail is being requested.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/TestIamPermissionsRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/TestIamPermissionsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      }
    },
    "definitions": {
      "AuditConfig": {
        "description": "Provides the configuration for non-admin_activity logging for a service.\nControls exemptions and specific log sub-types.",
        "properties": {
          "auditLogConfigs": {
            "description": "The configuration for each type of logging\nNext ID: 4",
            "items": {
              "$ref": "#/definitions/AuditLogConfig"
            },
            "type": "array"
          },
          "exemptedMembers": {
            "description": "Specifies the identities that are exempted from \"data access\" audit\nlogging for the `service` specified above.\nFollows the same format of Binding.members.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service": {
            "description": "Specifies a service that will be enabled for audit logging.\nFor example, `resourcemanager`, `storage`, `compute`.\n`allServices` is a special value that covers all services.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditLogConfig": {
        "description": "Provides the configuration for a sub-type of logging.",
        "properties": {
          "exemptedMembers": {
            "description": "Specifies the identities that are exempted from this type of logging\nFollows the same format of Binding.members.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "logType": {
            "description": "The log type that this config enables.",
            "enum": [
              "LOG_TYPE_UNSPECIFIED",
              "ADMIN_READ",
              "DATA_WRITE",
              "DATA_READ"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Binding": {
        "description": "Associates `members` with a `role`.",
        "properties": {
          "members": {
            "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "role": {
            "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.\nRequired",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudAuditOptions": {
        "description": "Write a Cloud Audit log",
        "properties": {},
        "type": "object"
      },
      "Condition": {
        "description": "A condition to be met.",
        "properties": {
          "iam": {
            "description": "Trusted attributes supplied by the IAM system.",
            "enum": [
              "NO_ATTR",
              "AUTHORITY",
              "ATTRIBUTION"
            ],
            "type": "string"
          },
          "op": {
            "description": "An operator to apply the subject with.",
            "enum": [
              "NO_OP",
              "EQUALS",
              "NOT_EQUALS",
              "IN",
              "NOT_IN",
              "DISCHARGED"
            ],
            "type": "string"
          },
          "svc": {
            "description": "Trusted attributes discharged by the service.",
            "type": "string"
          },
          "sys": {
            "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
            "enum": [
              "NO_ATTR",
              "REGION",
              "SERVICE",
              "NAME",
              "IP"
            ],
            "type": "string"
          },
          "value": {
            "description": "DEPRECATED. Use 'values' instead.",
            "type": "string"
          },
          "values": {
            "description": "The objects of the condition. This is mutually exclusive with 'value'.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CounterOptions": {
        "description": "Options for counters",
        "properties": {
          "field": {
            "description": "The field value to attribute.",
            "type": "string"
          },
          "metric": {
            "description": "The metric to update.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CryptoKey": {
        "description": "A CryptoKey represents a logical key that can be used for cryptographic\noperations.\n\nA CryptoKey is made up of one or more versions, which\nrepresent the actual key material used in cryptographic operations.",
        "properties": {
          "createTime": {
            "description": "Output only. The time at which this CryptoKey was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name for this CryptoKey in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
            "type": "string"
          },
          "nextRotationTime": {
            "description": "At next_rotation_time, the Key Management Service will automatically:\n\n1. Create a new version of this CryptoKey.\n2. Mark the new version as primary.\n\nKey rotations performed manually via\nCreateCryptoKeyVersion and\nUpdateCryptoKeyPrimaryVersion\ndo not affect next_rotation_time.",
            "format": "google-datetime",
            "type": "string"
          },
          "primary": {
            "$ref": "#/definitions/CryptoKeyVersion",
            "description": "Output only. A copy of the \"primary\" CryptoKeyVersion that will be used\nby Encrypt when this CryptoKey is given\nin EncryptRequest.name.\n\nThe CryptoKey's primary version can be updated via\nUpdateCryptoKeyPrimaryVersion."
          },
          "purpose": {
            "description": "The immutable purpose of this CryptoKey. Currently, the only acceptable\npurpose is ENCRYPT_DECRYPT.",
            "enum": [
              "CRYPTO_KEY_PURPOSE_UNSPECIFIED",
              "ENCRYPT_DECRYPT"
            ],
            "type": "string"
          },
          "rotationPeriod": {
            "description": "next_rotation_time will be advanced by this period when the service\nautomatically rotates a key. Must be at least one day.\n\nIf rotation_period is set, next_rotation_time must also be set.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CryptoKeyVersion": {
        "description": "A CryptoKeyVersion represents an individual cryptographic key, and the\nassociated key material.\n\nIt can be used for cryptographic operations either directly, or via its\nparent CryptoKey, in which case the server will choose the appropriate\nversion for the operation.",
        "properties": {
          "createTime": {
            "description": "Output only. The time at which this CryptoKeyVersion was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "destroyEventTime": {
            "description": "Output only. The time this CryptoKeyVersion's key material was\ndestroyed. Only present if state is\nDESTROYED.",
            "format": "google-datetime",
            "type": "string"
          },
          "destroyTime": {
            "description": "Output only. The time this CryptoKeyVersion's key material is scheduled\nfor destruction. Only present if state is\nDESTROY_SCHEDULED.",
            "format": "google-datetime",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name for this CryptoKeyVersion in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
            "type": "string"
          },
          "state": {
            "description": "The current state of the CryptoKeyVersion.",
            "enum": [
              "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED",
              "ENABLED",
              "DISABLED",
              "DESTROYED",
              "DESTROY_SCHEDULED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataAccessOptions": {
        "description": "Write a Data Access (Gin) log",
        "properties": {},
        "type": "object"
      },
      "DecryptRequest": {
        "description": "Request message for KeyManagementService.Decrypt.",
        "properties": {
          "additionalAuthenticatedData": {
            "description": "Optional data that must match the data originally supplied in\nEncryptRequest.additional_authenticated_data.",
            "format": "byte",
            "type": "string"
          },
          "ciphertext": {
            "description": "Required. The encrypted data originally returned in\nEncryptResponse.ciphertext.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DecryptResponse": {
        "description": "Response message for KeyManagementService.Decrypt.",
        "properties": {
          "plaintext": {
            "description": "The decrypted data originally supplied in EncryptRequest.plaintext.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DestroyCryptoKeyVersionRequest": {
        "description": "Request message for KeyManagementService.DestroyCryptoKeyVersion.",
        "properties": {},
        "type": "object"
      },
      "EncryptRequest": {
        "description": "Request message for KeyManagementService.Encrypt.",
        "properties": {
          "additionalAuthenticatedData": {
            "description": "Optional data that, if specified, must also be provided during decryption\nthrough DecryptRequest.additional_authenticated_data.  Must be no\nlarger than 64KiB.",
            "format": "byte",
            "type": "string"
          },
          "plaintext": {
            "description": "Required. The data to encrypt. Must be no larger than 64KiB.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptResponse": {
        "description": "Response message for KeyManagementService.Encrypt.",
        "properties": {
          "ciphertext": {
            "description": "The encrypted data.",
            "format": "byte",
            "type": "string"
          },
          "name": {
            "description": "The resource name of the CryptoKeyVersion used in encryption.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyRing": {
        "description": "A KeyRing is a toplevel logical grouping of CryptoKeys.",
        "properties": {
          "createTime": {
            "description": "Output only. The time at which this KeyRing was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name for the KeyRing in the format\n`projects/*/locations/*/keyRings/*`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCryptoKeyVersionsResponse": {
        "description": "Response message for KeyManagementService.ListCryptoKeyVersions.",
        "properties": {
          "cryptoKeyVersions": {
            "description": "The list of CryptoKeyVersions.",
            "items": {
              "$ref": "#/definitions/CryptoKeyVersion"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token to retrieve next page of results. Pass this value in\nListCryptoKeyVersionsRequest.page_token to retrieve the next page of\nresults.",
            "type": "string"
          },
          "totalSize": {
            "description": "The total number of CryptoKeyVersions that matched the\nquery.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListCryptoKeysResponse": {
        "description": "Response message for KeyManagementService.ListCryptoKeys.",
        "properties": {
          "cryptoKeys": {
            "description": "The list of CryptoKeys.",
            "items": {
              "$ref": "#/definitions/CryptoKey"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token to retrieve next page of results. Pass this value in\nListCryptoKeysRequest.page_token to retrieve the next page of results.",
            "type": "string"
          },
          "totalSize": {
            "description": "The total number of CryptoKeys that matched the query.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListKeyRingsResponse": {
        "description": "Response message for KeyManagementService.ListKeyRings.",
        "properties": {
          "keyRings": {
            "description": "The list of KeyRings.",
            "items": {
              "$ref": "#/definitions/KeyRing"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A token to retrieve next page of results. Pass this value in\nListKeyRingsRequest.page_token to retrieve the next page of results.",
            "type": "string"
          },
          "totalSize": {
            "description": "The total number of KeyRings that matched the query.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListLocationsResponse": {
        "description": "The response message for Locations.ListLocations.",
        "properties": {
          "locations": {
            "description": "A list of locations that matches the specified filter in the request.",
            "items": {
              "$ref": "#/definitions/Location"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "The standard List next-page token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Location": {
        "description": "A resource that represents Google Cloud Platform location.",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
            "type": "object"
          },
          "locationId": {
            "description": "The canonical id for this location. For example: `\"us-east1\"`.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
            "type": "object"
          },
          "name": {
            "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogConfig": {
        "description": "Specifies what kind of log the caller must write\nIncrement a streamz counter with the specified metric and field names.\n\nMetric names should start with a '/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"/iam/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nAt present the only supported field names are\n   - \"iam_principal\", corresponding to IAMContext.principal;\n   - \"\" (empty string), resulting in one aggretated counter with no field.\n\nExamples:\n  counter { metric: \"/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter /iam/policy/backend_debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}\n\nAt this time we do not support:\n* multiple field names (though this may be supported in the future)\n* decrementing the counter\n* incrementing it by anything other than 1",
        "properties": {
          "cloudAudit": {
            "$ref": "#/definitions/CloudAuditOptions",
            "description": "Cloud audit options."
          },
          "counter": {
            "$ref": "#/definitions/CounterOptions",
            "description": "Counter options."
          },
          "dataAccess": {
            "$ref": "#/definitions/DataAccessOptions",
            "description": "Data access options."
          }
        },
        "type": "object"
      },
      "Policy": {
        "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\",\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam).",
        "properties": {
          "auditConfigs": {
            "description": "Specifies audit logging configs for \"data access\".\n\"data access\": generally refers to data reads/writes and admin reads.\n\"admin activity\": generally refers to admin writes.\n\nNote: `AuditConfig` doesn't apply to \"admin activity\", which always\nenables audit logging.",
            "items": {
              "$ref": "#/definitions/AuditConfig"
            },
            "type": "array"
          },
          "bindings": {
            "description": "Associates a list of `members` to a `role`.\nMultiple `bindings` must not be specified for the same `role`.\n`bindings` with no members will result in an error.",
            "items": {
              "$ref": "#/definitions/Binding"
            },
            "type": "array"
          },
          "etag": {
            "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
            "format": "byte",
            "type": "string"
          },
          "iamOwned": {
            "type": "boolean"
          },
          "rules": {
            "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
            "items": {
              "$ref": "#/definitions/Rule"
            },
            "type": "array"
          },
          "version": {
            "description": "Version of the `Policy`. The default version is 0.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RestoreCryptoKeyVersionRequest": {
        "description": "Request message for KeyManagementService.RestoreCryptoKeyVersion.",
        "properties": {},
        "type": "object"
      },
      "Rule": {
        "description": "A rule to be applied in a Policy.",
        "properties": {
          "action": {
            "description": "Required",
            "enum": [
              "NO_ACTION",
              "ALLOW",
              "ALLOW_WITH_LOG",
              "DENY",
              "DENY_WITH_LOG",
              "LOG"
            ],
            "type": "string"
          },
          "conditions": {
            "description": "Additional restrictions that must be met",
            "items": {
              "$ref": "#/definitions/Condition"
            },
            "type": "array"
          },
          "description": {
            "description": "Human-readable description of the rule.",
            "type": "string"
          },
          "in": {
            "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "logConfig": {
            "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
            "items": {
              "$ref": "#/definitions/LogConfig"
            },
            "type": "array"
          },
          "notIn": {
            "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries is the same as for members in a\nBinding (see google/iam/v1/policy.proto).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissions": {
            "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SetIamPolicyRequest": {
        "description": "Request message for `SetIamPolicy` method.",
        "properties": {
          "policy": {
            "$ref": "#/definitions/Policy",
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, a default\nmask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestIamPermissionsRequest": {
        "description": "Request message for `TestIamPermissions` method.",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TestIamPermissionsResponse": {
        "description": "Response message for `TestIamPermissions` method.",
        "properties": {
          "permissions": {
            "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateCryptoKeyPrimaryVersionRequest": {
        "description": "Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion.",
        "properties": {
          "cryptoKeyVersionId": {
            "description": "The id of the child CryptoKeyVersion to use as primary.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}