{
  "type": "api",
  "key": "guru:mondiamedia.com",
  "info": {
    "description": "<p>This is the API for building Mondia-Media-Products, like Tops.</p><p>Every call need a valid client or user-token.</p><p><ol><li>Client-Token can be get at our Police-API</li><li>User-Token can be get through a login on a customer specific Life-Cycle-Service</li><li>UseCases regarding Login, Register, Subscribe (incl. Payment) will be done by the Life-Cycle-Service</li></ol></p>",
    "title": "Queen",
    "version": "2.15.2",
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.mondiamedia.com_content_themes_mondiamedia_library_assets_dist_img_logo_mm.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://queen.mondiamedia.com/v2/swagger",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "mondiamedia.com"
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "queen.mondiamedia.com",
    "basePath": "/v2/api",
    "info": {
      "description": "<p>This is the API for building Mondia-Media-Products, like Tops.</p><p>Every call need a valid client or user-token.</p><p><ol><li>Client-Token can be get at our Police-API</li><li>User-Token can be get through a login on a customer specific Life-Cycle-Service</li><li>UseCases regarding Login, Register, Subscribe (incl. Payment) will be done by the Life-Cycle-Service</li></ol></p>",
      "title": "Queen",
      "version": "2.15.2",
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_www.mondiamedia.com_content_themes_mondiamedia_library_assets_dist_img_logo_mm.png"
      },
      "x-origin": {
        "format": "swagger",
        "url": "https://queen.mondiamedia.com/v2/swagger",
        "version": "2.0"
      },
      "x-preferred": true,
      "x-providerName": "mondiamedia.com"
    },
    "produces": [
      "application/json"
    ],
    "tags": [],
    "paths": {
      "/api/v3/mmplaylist/article/download": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "description": "This call retrieve a download URL for a Article (Preview/Full).<p> Please note, that a Full-Binary is only available with a User-Token.</p>",
          "parameters": [
            {
              "description": "ArticleDownload",
              "in": "body",
              "name": "ArticleIdModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ArticleIdModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "Binary",
              "schema": {
                "$ref": "#/definitions/UrlTicketPreviewEncryptionModel"
              }
            }
          },
          "summary": "(Client/User-Token) Get a download URL for a article.",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/article/report/{ticket}": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "description": "This call store a event for a article, that was downloaded, removed or listened.",
          "parameters": [
            {
              "description": "Ticket of the corresponding download",
              "in": "path",
              "name": "ticket",
              "required": true,
              "type": "string"
            },
            {
              "description": "ArticleReport",
              "in": "body",
              "name": "ArticleReport",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ArticleReport"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "CreatedEntityResponse",
              "schema": {
                "$ref": "#/definitions/IdModel"
              }
            }
          },
          "summary": "(Client/User-Token) Provide a event for a article.",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/article/search": {
        "get": {
          "description": "This call search the complete catalogue for this client. Please note, that you need a special client-configuration to use the results of this call for a Preview/Download or a personal playlist.",
          "parameters": [
            {
              "description": "query",
              "in": "query",
              "name": "query",
              "required": false,
              "type": "string"
            },
            {
              "description": "title",
              "in": "query",
              "name": "title",
              "required": false,
              "type": "string"
            },
            {
              "description": "title of album",
              "in": "query",
              "name": "albumTitle",
              "required": false,
              "type": "string"
            },
            {
              "description": "artist",
              "in": "query",
              "name": "artist",
              "required": false,
              "type": "string"
            },
            {
              "description": "genre",
              "in": "query",
              "name": "genre",
              "required": false,
              "type": "string"
            },
            {
              "description": "Universal Product Code",
              "in": "query",
              "name": "upc",
              "required": false,
              "type": "string"
            },
            {
              "description": "European Article Number",
              "in": "query",
              "name": "ean",
              "required": false,
              "type": "number"
            },
            {
              "description": "Global Release Identifier",
              "in": "query",
              "name": "grid",
              "required": false,
              "type": "string"
            },
            {
              "description": "Rovi Ids (Artist, Song or Release)",
              "in": "query",
              "name": "rovi",
              "required": false,
              "type": "string"
            },
            {
              "description": "MusicBrainz",
              "in": "query",
              "name": "musicbrainz",
              "required": false,
              "type": "string"
            },
            {
              "description": "Sony Reporting Code",
              "in": "query",
              "name": "sony",
              "required": false,
              "type": "string"
            },
            {
              "description": "International Standard Recording Code",
              "in": "query",
              "name": "isrc",
              "required": false,
              "type": "string"
            },
            {
              "description": "Exclude Songs from Compilations",
              "in": "query",
              "name": "excludeCompilations",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Exclude Karaoke Songs",
              "in": "query",
              "name": "excludeKaraoke",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Exclude Songs that are not streamable",
              "in": "query",
              "name": "excludeNonStreamable",
              "required": false,
              "type": "boolean"
            },
            {
              "default": 0,
              "description": "zero-based offset the request",
              "in": "query",
              "maximum": 2147483647,
              "minimum": 0,
              "name": "offset",
              "required": false,
              "type": "number"
            },
            {
              "default": 10,
              "description": "Number of items to be returned",
              "in": "query",
              "maximum": 2147483647,
              "minimum": 0,
              "name": "limit",
              "required": false,
              "type": "number"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(Client/User-Token) Search complete catalogue.",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/article/streaming": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "description": "This call retrieve a streaming URL for a Article (Preview/Full).<p> Please note, that a Full-Binary is only available with a User-Token.</p>",
          "parameters": [
            {
              "description": "ArticleStreaming",
              "in": "body",
              "name": "ArticleIdPreviewModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ArticleIdPreviewModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "StreamingLink",
              "schema": {
                "$ref": "#/definitions/UrlTicketPreviewModel"
              }
            }
          },
          "summary": "(Client/User-Token) Get a streaming URL for a article.",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/config": {
        "get": {
          "description": "This call retrieve the config for a MMPlaylist product.",
          "responses": {
            "default": {
              "description": "Config",
              "schema": {
                "$ref": "#/definitions/Config_keyClient_template_keyLifecycleAPIPagesModel"
              }
            }
          },
          "summary": "(Client-Token) Get MMPlaylist Config",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/playlist": {
        "get": {
          "description": "This call retrieve all available playlists for this client.",
          "parameters": [
            {
              "description": "Include Items of the Playlist (Tracks, Collections, AudioBooks)",
              "in": "query",
              "name": "includeEntities",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Include Items of the Playlist (Chapters, Tracks of a Collection",
              "in": "query",
              "name": "includeSubEntities",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Keep Items of the Playlist that are not available. Items will be marked as \"notAvailable\": true",
              "in": "query",
              "name": "keepUnavailableItems",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Include restricted playlists. ",
              "in": "query",
              "name": "includeRestricted",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Return only playlist available for given subscriptiontypeid. include restricted must be false",
              "in": "query",
              "name": "subscriptionTypeId",
              "required": false,
              "type": "number"
            }
          ],
          "responses": {
            "default": {
              "description": "Playlists",
              "schema": {
                "description": "Playlists",
                "items": {
                  "$ref": "#/definitions/PlaylistKeyPlaylistNamePlaylistDescriptionCoverUrlEntitiesModel"
                },
                "type": "array"
              }
            }
          },
          "summary": "(Client-Token) Get all available playlists of a MMPlaylist config.",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/playlist/{playlistKey}": {
        "get": {
          "description": "This call retrieve a playlist for a playlistKey.",
          "parameters": [
            {
              "in": "path",
              "name": "playlistKey",
              "required": true,
              "type": "string"
            },
            {
              "description": "Include Sub-Items of the Playlist (Chapters, Tracks of a Collection",
              "in": "query",
              "name": "includeSubEntities",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Keep Items of the Playlist that are not available. Items will be marked as \"notAvailable\": true",
              "in": "query",
              "name": "keepUnavailableItems",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "default": {
              "description": "PlaylistModel",
              "schema": {
                "$ref": "#/definitions/PlaylistKeyPlaylistNamePlaylistDescriptionCoverUrlEntitiesModel"
              }
            }
          },
          "summary": "(Client-Token) Get a playlist for a given key",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/playlist/{playlistKey}/entities": {
        "get": {
          "description": "This call retrieve all a playlist for a given key client.",
          "parameters": [
            {
              "in": "path",
              "name": "playlistKey",
              "required": true,
              "type": "string"
            },
            {
              "description": "Include Items of the Playlist (Chapters, Tracks of a Collection",
              "in": "query",
              "name": "includeSubEntities",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Keep Items of the Playlist that are not available. Items will be marked as \"notAvailable\": true",
              "in": "query",
              "name": "keepUnavailableItems",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "default": {
              "description": "Entries",
              "schema": {
                "description": "Entries",
                "items": {
                  "$ref": "#/definitions/TypeSongModel"
                },
                "type": "array"
              }
            }
          },
          "summary": "(Client-Token) Get a playlist for a given key",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/user/playlist": {
        "get": {
          "description": "This call retrieve the personal playlist for the current user.",
          "parameters": [
            {
              "description": "Include Sub-Items of the Playlist (Chapters, Tracks of a Collection",
              "in": "query",
              "name": "includeSubEntities",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(User-Token) Get the personal playlist for the curren user.",
          "tags": [
            "api"
          ]
        },
        "put": {
          "consumes": [
            "application/json"
          ],
          "description": "This call put changes of the content (remove, position-change) for a personal playlist for the current user.",
          "parameters": [
            {
              "description": "PersonalPlaylistIds",
              "in": "body",
              "name": "ItemsModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ItemsModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(User-Token) Put new personal playlist.",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/user/playlist/article": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "description": "This call post a new article to the personal playlist for the current user.",
          "parameters": [
            {
              "description": "Article",
              "in": "body",
              "name": "IdModel_2",
              "required": false,
              "schema": {
                "$ref": "#/definitions/IdModel_2"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(User-Token) Add a article to the personal playlist",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/user/playlist/article/{id}": {
        "delete": {
          "description": "This call remove a new article to the personal playlist for the current user.",
          "parameters": [
            {
              "description": "Id of the item",
              "in": "path",
              "name": "id",
              "required": true,
              "type": "number"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(User-Token) Remove a article to the personal playlist",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/user/playlist/articles": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "description": "This call post a new articles to the personal playlist for the current user.",
          "parameters": [
            {
              "description": "Articles",
              "in": "body",
              "name": "IdsModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/IdsModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(User-Token) Add articles to the personal playlist",
          "tags": [
            "api"
          ]
        }
      },
      "/api/v3/mmplaylist/user/playlist/{playlistKey}": {
        "post": {
          "description": "This call post a complete playlist to the personal playlist for the current user.",
          "parameters": [
            {
              "in": "path",
              "name": "playlistKey",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "summary": "(User-Token) Add a complete playlist to the personal playlist",
          "tags": [
            "api"
          ]
        }
      },
      "/mmplaylist/article/download": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "description": "DownloadResponse",
              "in": "body",
              "name": "ArticleIdModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ArticleIdModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/article/report/{ticket}": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "ticket",
              "required": true,
              "type": "string"
            },
            {
              "description": "ArticleReport",
              "in": "body",
              "name": "ArticleReport_2",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ArticleReport_2"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/article/search": {
        "get": {
          "parameters": [
            {
              "description": "query",
              "in": "query",
              "name": "query",
              "required": false,
              "type": "string"
            },
            {
              "description": "title",
              "in": "query",
              "name": "title",
              "required": false,
              "type": "string"
            },
            {
              "description": "title of album",
              "in": "query",
              "name": "albumTitle",
              "required": false,
              "type": "string"
            },
            {
              "description": "artist",
              "in": "query",
              "name": "artist",
              "required": false,
              "type": "string"
            },
            {
              "description": "genre",
              "in": "query",
              "name": "genre",
              "required": false,
              "type": "string"
            },
            {
              "description": "Universal Product Code",
              "in": "query",
              "name": "upc",
              "required": false,
              "type": "string"
            },
            {
              "description": "European Article Number",
              "in": "query",
              "name": "ean",
              "required": false,
              "type": "number"
            },
            {
              "description": "Global Release Identifier",
              "in": "query",
              "name": "grid",
              "required": false,
              "type": "string"
            },
            {
              "description": "Rovi Ids (Artist, Song or Release)",
              "in": "query",
              "name": "rovi",
              "required": false,
              "type": "string"
            },
            {
              "description": "MusicBrainz",
              "in": "query",
              "name": "musicbrainz",
              "required": false,
              "type": "string"
            },
            {
              "description": "Sony Reporting Code",
              "in": "query",
              "name": "sony",
              "required": false,
              "type": "string"
            },
            {
              "description": "International Standard Recording Code",
              "in": "query",
              "name": "isrc",
              "required": false,
              "type": "string"
            },
            {
              "description": "Exclude Songs from Compilations",
              "in": "query",
              "name": "excludeCompilations",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Exclude Karaoke Songs",
              "in": "query",
              "name": "excludeKaraoke",
              "required": false,
              "type": "boolean"
            },
            {
              "description": "Exclude Songs that are not streamable",
              "in": "query",
              "name": "excludeNonStreamable",
              "required": false,
              "type": "boolean"
            },
            {
              "default": 0,
              "description": "zero-based offset the request",
              "in": "query",
              "maximum": 2147483647,
              "minimum": 0,
              "name": "offset",
              "required": false,
              "type": "number"
            },
            {
              "default": 10,
              "description": "Number of items to be returned",
              "in": "query",
              "maximum": 2147483647,
              "minimum": 0,
              "name": "limit",
              "required": false,
              "type": "number"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/article/streaming": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "description": "StreamingResponse",
              "in": "body",
              "name": "ArticleIdPreviewModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ArticleIdPreviewModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/config": {
        "get": {
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/playlist": {
        "get": {
          "parameters": [
            {
              "in": "query",
              "name": "includeSongs",
              "required": false,
              "type": "boolean"
            },
            {
              "in": "query",
              "name": "includeRestricted",
              "required": false,
              "type": "boolean"
            },
            {
              "in": "query",
              "name": "subscriptionTypeId",
              "required": false,
              "type": "number"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/playlist/{playlistKey}": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "playlistKey",
              "required": true,
              "type": "string"
            },
            {
              "in": "query",
              "name": "keepUnavailableItems",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/user/playlist": {
        "get": {
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        },
        "put": {
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "description": "PersonalPlaylistIds",
              "in": "body",
              "name": "ItemsModel",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ItemsModel"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/user/playlist/article": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "description": "Article",
              "in": "body",
              "name": "IdModel_2",
              "required": false,
              "schema": {
                "$ref": "#/definitions/IdModel_2"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/user/playlist/article/{id}": {
        "delete": {
          "parameters": [
            {
              "description": "Id of the item",
              "in": "path",
              "name": "id",
              "required": true,
              "type": "number"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      },
      "/mmplaylist/user/playlist/{playlistKey}": {
        "post": {
          "parameters": [
            {
              "in": "path",
              "name": "playlistKey",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          },
          "tags": [
            "mmplaylist"
          ]
        }
      }
    },
    "definitions": {
      "ArticleIdModel": {
        "properties": {
          "articleId": {
            "type": "number"
          }
        },
        "required": [
          "articleId"
        ]
      },
      "ArticleIdPreviewModel": {
        "properties": {
          "articleId": {
            "type": "number"
          },
          "preview": {
            "type": "boolean"
          }
        },
        "required": [
          "articleId"
        ]
      },
      "ArticleReport": {
        "properties": {
          "date": {
            "description": "Date when the event was happen (Use the format \"yyyy-MM-ddTHH:mm:ss.SSSZ\"",
            "type": "string"
          },
          "maxUsageDuration": {
            "description": "Maximal onblock duration in seconds (for usage-Event)",
            "type": "number"
          },
          "offline": {
            "description": "Information if the Track was listend offline (for usage-event)",
            "type": "boolean"
          },
          "realm": {
            "default": "app",
            "description": "Realm/Client of the event",
            "enum": [
              "app",
              "web"
            ],
            "type": "string"
          },
          "source": {
            "description": "Key of the playlist, where this event occurs - Special: MyTracks for personal Playlist",
            "type": "string"
          },
          "trigger": {
            "default": "playlist",
            "description": "Did the user trigger the play of this item (Play, Skip) (for usage-Event)",
            "enum": [
              "user",
              "playlist"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of the status event (downloaded, removed, listened)",
            "enum": [
              "downloaded",
              "removed",
              "listened"
            ],
            "type": "string"
          },
          "usageDuration": {
            "description": "Total duration in seconds (for usage-Event)",
            "type": "number"
          }
        },
        "required": [
          "type",
          "date"
        ]
      },
      "ArticleReport_2": {
        "properties": {
          "date": {
            "type": "string"
          },
          "maxUsageDuration": {
            "type": "number"
          },
          "offline": {
            "type": "boolean"
          },
          "realm": {
            "default": "app",
            "enum": [
              "app",
              "web"
            ],
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "trigger": {
            "default": "playlist",
            "enum": [
              "user",
              "playlist"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "downloaded",
              "removed",
              "listened"
            ],
            "type": "string"
          },
          "usageDuration": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "date"
        ]
      },
      "Config_keyClient_template_keyLifecycleAPIPagesModel": {
        "properties": {
          "client_template_key": {
            "description": "Corresponding Client Template Key",
            "type": "string"
          },
          "config_key": {
            "type": "string"
          },
          "lifecycleAPI": {
            "description": "Endpoint for the Lifecycle Service",
            "type": "string"
          },
          "pages": {
            "items": {
              "$ref": "#/definitions/KeyPageTypeTitlesContentModel"
            },
            "type": "array"
          }
        }
      },
      "EmptyModel": {
        "properties": {}
      },
      "IdModel": {
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "IdModel_2": {
        "properties": {
          "id": {
            "description": "Id of the item",
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "id"
        ]
      },
      "IdsModel": {
        "properties": {
          "ids": {
            "description": "Ids of the items",
            "items": {
              "type": "number"
            },
            "type": "array"
          }
        },
        "required": [
          "ids"
        ]
      },
      "ItemsModel": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/definitions/IdModel_2"
            },
            "type": "array"
          }
        }
      },
      "KeyPageTypeTitlesContentModel": {
        "properties": {
          "content": {
            "$ref": "#/definitions/EmptyModel"
          },
          "key": {
            "type": "string"
          },
          "pageType": {
            "type": "string"
          },
          "titles": {
            "$ref": "#/definitions/EmptyModel"
          }
        },
        "required": [
          "key",
          "pageType"
        ]
      },
      "PlaylistKeyPlaylistNamePlaylistDescriptionCoverUrlEntitiesModel": {
        "properties": {
          "coverUrl": {
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/definitions/TypeSongModel"
            },
            "type": "array"
          },
          "playlistDescription": {
            "type": "string"
          },
          "playlistKey": {
            "type": "string"
          },
          "playlistName": {
            "type": "string"
          }
        },
        "required": [
          "playlistKey",
          "playlistName"
        ]
      },
      "TypeSongModel": {
        "properties": {
          "song": {
            "$ref": "#/definitions/EmptyModel"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "UrlTicketPreviewEncryptionModel": {
        "properties": {
          "encryption": {
            "description": "used encryption for this song",
            "type": "string"
          },
          "preview": {
            "type": "boolean"
          },
          "ticket": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "UrlTicketPreviewModel": {
        "properties": {
          "preview": {
            "type": "boolean"
          },
          "ticket": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      }
    }
  }
}