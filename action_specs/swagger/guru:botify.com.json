{
  "type": "api",
  "key": "guru:botify.com",
  "info": {
    "description": "Botify Saas API",
    "title": "Botify",
    "version": "1.0.0",
    "x-logo": {
      "backgroundColor": "#1A1A1A",
      "url": "https://api.apis.guru/v2/cache/logo/https_static.botify.com_images_logos_botify-white.dc4215a12b9c.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://api.botify.com/v1/swagger.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "botify.com"
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "api.botify.com",
    "basePath": "/v1",
    "info": {
      "description": "Botify Saas API",
      "title": "Botify",
      "version": "1.0.0",
      "x-logo": {
        "backgroundColor": "#1A1A1A",
        "url": "https://api.apis.guru/v2/cache/logo/https_static.botify.com_images_logos_botify-white.dc4215a12b9c.png"
      },
      "x-origin": {
        "format": "swagger",
        "url": "https://api.botify.com/v1/swagger.json",
        "version": "2.0"
      },
      "x-preferred": true,
      "x-providerName": "botify.com"
    },
    "externalDocs": {
      "url": "https://developers.botify.com/"
    },
    "securityDefinitions": {
      "DjangoRestToken": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    },
    "security": [
      {
        "DjangoRestToken": []
      }
    ],
    "paths": {
      "/analyses/{username}/{project_slug}": {
        "get": {
          "description": "List all analyses for a project",
          "operationId": "getAnalyses",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Analysis"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "List all analyses for a project",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}": {
        "get": {
          "description": "Get an Analysis detail",
          "operationId": "getAnalysisSummary",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/AnalysisDetail"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Get an Analysis detail",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics": {
        "get": {
          "description": "Return global statistics for an analysis",
          "operationId": "getCrawlStatistics",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/CrawlStatistics"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Return global statistics for an analysis",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time": {
        "get": {
          "description": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min) for an analysis",
          "operationId": "getCrawlStatisticsByFrequency",
          "parameters": [
            {
              "description": "max number of elements to retrieve",
              "format": "int32",
              "in": "query",
              "name": "limit",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Aggregation frequency",
              "enum": [
                "1mn",
                "5mn",
                "60mn"
              ],
              "in": "query",
              "name": "frequency",
              "required": true,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min)",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}": {
        "get": {
          "description": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
          "operationId": "getCrawlStatisticsUrls",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "URLs list type (crawled URLs or error URLs)",
            "enum": [
              "crawled",
              "errors"
            ],
            "in": "path",
            "name": "list_type",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}": {
        "get": {
          "description": "List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)",
          "operationId": "getGanalyticsOrphanURLs",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Default"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "List of Orphan URLs",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)",
            "enum": [
              "organic",
              "social"
            ],
            "in": "path",
            "name": "medium",
            "required": true,
            "type": "string"
          },
          {
            "description": "Traffic source, value: name of the search engine or social network",
            "enum": [
              "all",
              "aol",
              "ask",
              "baidu",
              "bing",
              "facebook",
              "google",
              "google+",
              "linkedin",
              "naver",
              "pinterest",
              "reddit",
              "tumblr",
              "twitter",
              "yahoo",
              "yandex"
            ],
            "in": "path",
            "name": "source",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles": {
        "get": {
          "description": "Get inlinks percentiles",
          "operationId": "getLinksPercentiles",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Get inlinks percentiles",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost": {
        "get": {
          "description": "Lost pagerank",
          "operationId": "getPageRankLost",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Lost pagerank",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report": {
        "get": {
          "description": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc.)",
          "operationId": "getSitemapsReport",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config": {
        "get": {
          "description": "Sample list of URLs which were found in your sitemaps but outside of the crawl perimeter defined for the project, for instance domain/subdomain or protocol (HTTP/HTTPS) not allowed in the crawl settings.",
          "operationId": "getSitemapsSamplesOutOfConfig",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Default"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Sample list of URLs which were found in your sitemaps but outside of the",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only": {
        "get": {
          "description": "Sample list of URLs which were found in your sitemaps, within the project allowed scope (allowed domains/subdomains/protocols), but not found by the Botify crawler.",
          "operationId": "getSitemapsSamplesSitemapsOnly",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Default"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Sample list of URLs which were found in your sitemaps, within the project",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains": {
        "get": {
          "description": "Top domains",
          "operationId": "getLinksTopDomains",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Default"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Top domains",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains": {
        "get": {
          "description": "Top subddomains",
          "operationId": "getLinksTopSubdomains",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Default"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Top subddomains",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls": {
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ],
        "post": {
          "description": "Executes a query and returns a paginated response",
          "operationId": "getUrls",
          "parameters": [
            {
              "in": "body",
              "name": "UrlsQuery",
              "schema": {
                "$ref": "#/definitions/UrlsQuery"
              }
            },
            {
              "default": "current",
              "description": "Analysis context to execute the query",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            },
            {
              "description": "Page Number",
              "format": "int32",
              "in": "query",
              "name": "page",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page Size",
              "format": "int32",
              "in": "query",
              "name": "size",
              "required": false,
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Default"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Executes a query and returns a paginated response",
          "tags": [
            "Analysis"
          ]
        }
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs": {
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ],
        "post": {
          "description": "Query aggregator. It accepts multiple queries",
          "operationId": "getUrlsAggs",
          "parameters": [
            {
              "in": "body",
              "name": "UrlsAggsQueries",
              "schema": {
                "$ref": "#/definitions/UrlsAggsQueries"
              }
            },
            {
              "default": "current",
              "description": "",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Query aggregator",
          "tags": [
            "Analysis"
          ]
        }
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel": {
        "get": {
          "description": "Gets an Analysis datamodel",
          "operationId": "getUrlsDatamodel",
          "parameters": [
            {
              "default": "current",
              "description": "",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Gets an Analysis datamodel",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export": {
        "get": {
          "description": "A list of the CSV Exports requests and their current status",
          "operationId": "getUrlsExports",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/CsvExportStatus"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "A list of the CSV Exports requests and their current status",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ],
        "post": {
          "description": "Creates a new UrlExport object and starts a task that will export the results into a csv. Returns the model id that manages the task",
          "operationId": "createUrlsExport",
          "parameters": [
            {
              "in": "body",
              "name": "UrlsQuery",
              "schema": {
                "$ref": "#/definitions/UrlsQuery"
              }
            },
            {
              "default": "current",
              "description": "",
              "enum": [
                "current",
                "disappeared",
                "new",
                "search_engines_orphans"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/CsvExportStatus"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Creates a new UrlExport object and starts a task that will export the results into a csv",
          "tags": [
            "Analysis"
          ]
        }
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}": {
        "get": {
          "description": "Checks the status of an CSVUrlExportJob object. Returns json object with the status.",
          "operationId": "getUrlsExportStatus",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/CsvExportStatus"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Checks the status of an CSVUrlExportJob object",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Url Export ID",
            "in": "path",
            "name": "url_export_id",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters": {
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          }
        ],
        "post": {
          "description": "Return most frequent segments (= suggested patterns in the previous version) for a Botify Query.",
          "operationId": "getUrlsSuggestedFilters",
          "parameters": [
            {
              "in": "body",
              "name": "UrlsAggsQuery",
              "schema": {
                "$ref": "#/definitions/UrlsAggsQuery"
              }
            },
            {
              "default": "current",
              "description": "",
              "enum": [
                "current",
                "new"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/UrlsAggsQuery"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Return most frequent segments (= suggested patterns in the previous version)",
          "tags": [
            "Analysis"
          ]
        }
      },
      "/analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}": {
        "get": {
          "description": "Gets the detail of an URL for an analysis",
          "operationId": "getUrlDetail",
          "parameters": [
            {
              "default": "current",
              "description": "Analysis lookup context",
              "enum": [
                "current",
                "disappeared"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            },
            {
              "collectionFormat": "csv",
              "description": "comma separated list of fields to return (c.f. URLs Datamodel)",
              "in": "query",
              "items": {
                "type": "string"
              },
              "name": "fields",
              "required": false,
              "type": "array"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Gets the detail of an URL for an analysis",
          "tags": [
            "Analysis"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Analysis' identifier",
            "in": "path",
            "name": "analysis_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "(Urlencoded) Searched URL",
            "in": "path",
            "name": "url",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/projects/{username}": {
        "get": {
          "description": "List all active projects for the user",
          "operationId": "getProjects",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/Project"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "List all active projects for the user",
          "tags": [
            "Project"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/projects/{username}/{project_slug}/features/url_rewriting/rules_validator": {
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          }
        ],
        "post": {
          "description": "Match and replace parts of a URL based on rules passed in POST data.",
          "operationId": "testUrlRewritingRules",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/URLRewritingRulesSerializer"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Match and replace parts of a URL based on rules passed in POST data",
          "tags": [
            "Project"
          ]
        }
      },
      "/projects/{username}/{project_slug}/filters": {
        "get": {
          "description": "List all the project's saved filters (each filter's name, ID and filter value)",
          "operationId": "getSavedFilters",
          "parameters": [
            {
              "description": "Page Number",
              "in": "query",
              "name": "page",
              "type": "integer"
            },
            {
              "description": "Page Size",
              "in": "query",
              "name": "size",
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "properties": {
                  "count": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "next": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "page": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "previous": {
                    "description": "",
                    "readOnly": true,
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "items": {
                      "$ref": "#/definitions/ProjectSavedFilter"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "size": {
                    "description": "",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "List all the project's saved filters (each filter's name, ID and filter value)",
          "tags": [
            "Project"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/projects/{username}/{project_slug}/filters/{identifier}": {
        "get": {
          "description": "Retrieves a specific saved filter's name, ID and filter value",
          "operationId": "getSavedFilter",
          "parameters": [],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/ProjectSavedFilter"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Retrieves a specific saved filter's name, ID and filter value",
          "tags": [
            "Project"
          ]
        },
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Saved Filter's identifier",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/projects/{username}/{project_slug}/urls/aggs": {
        "parameters": [
          {
            "description": "User's identifier",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project's identifier",
            "in": "path",
            "name": "project_slug",
            "required": true,
            "type": "string"
          }
        ],
        "post": {
          "description": "Project Query aggregator. It accepts multiple queries that will be executed on all completed analyses in the project",
          "operationId": "getProjectUrlsAggs",
          "parameters": [
            {
              "in": "body",
              "name": "UrlsAggsQueries",
              "schema": {
                "$ref": "#/definitions/UrlsAggsQueries"
              }
            },
            {
              "default": "current",
              "description": "Analysis context to execute the queries",
              "enum": [
                "current",
                "disappeared",
                "new"
              ],
              "in": "query",
              "name": "area",
              "required": false,
              "type": "string"
            },
            {
              "description": "Last analysis on the trend",
              "in": "query",
              "name": "last_analysis_slug",
              "required": false,
              "type": "string"
            },
            {
              "default": 20,
              "description": "Max number of analysis to return",
              "format": "int32",
              "in": "query",
              "maximum": 20,
              "minimum": 1,
              "name": "nb_analyses",
              "required": false,
              "type": "integer"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Default"
              }
            },
            "default": {
              "description": "error payload",
              "schema": {
                "$ref": "#/definitions/DefaultPayload"
              }
            }
          },
          "summary": "Project Query aggregator",
          "tags": [
            "Project"
          ]
        }
      }
    },
    "definitions": {
      "Analysis": {
        "properties": {
          "config": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "date_created": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_finished": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_last_modified": {
            "description": "Date of last modified analysis",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_launched": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "features": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "slug": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_done": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_in_queue": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/User",
            "description": "",
            "readOnly": false
          }
        },
        "required": [
          "user"
        ],
        "type": "object"
      },
      "AnalysisDetail": {
        "properties": {
          "config": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "date_finished": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_last_modified": {
            "description": "Date of last modified analysis",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "date_launched": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "failures": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "features": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "red_button_domain": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "slug": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_done": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "urls_in_queue": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/User",
            "description": "",
            "readOnly": false
          }
        },
        "required": [
          "user"
        ],
        "type": "object"
      },
      "CrawlStatistics": {
        "properties": {
          "depth_current": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "last_upd_dt": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "pages_dones": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_2xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_3xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_4xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_5xx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_networkerror": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_dones_xxx": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "pages_known": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          }
        },
        "required": [
          "depth_current",
          "pages_dones_networkerror",
          "pages_dones_3xx",
          "pages_dones",
          "pages_dones_2xx",
          "last_upd_dt",
          "pages_dones_5xx",
          "pages_dones_xxx",
          "pages_dones_4xx",
          "pages_known"
        ],
        "type": "object"
      },
      "CsvExportStatus": {
        "properties": {
          "area": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "date_created": {
            "description": "",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "job_id": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "job_status": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "job_url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "nb_results": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 0,
            "readOnly": false,
            "type": "integer"
          },
          "query": {
            "$ref": "#/definitions/UrlsQuery",
            "description": "",
            "readOnly": false
          },
          "results": {
            "description": "",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "Default": {
        "properties": {},
        "type": "object"
      },
      "DefaultPayload": {
        "description": "default payload for object for all HTTP codes that are not covered individually",
        "properties": {
          "error": {
            "properties": {
              "error_code": {
                "description": "Error Code",
                "type": "string"
              },
              "error_detail": {
                "description": "If available, detailed error",
                "type": "object"
              },
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "FieldValues": {
        "properties": {
          "count": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "results": {
            "description": "",
            "items": {
              "$ref": "#/definitions/FieldValuesResult"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "count",
          "results"
        ],
        "type": "object"
      },
      "FieldValuesResult": {
        "properties": {
          "nb_urls": {
            "description": "",
            "format": "int64",
            "readOnly": false,
            "type": "integer"
          },
          "value": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "value",
          "nb_urls"
        ],
        "type": "object"
      },
      "Project": {
        "properties": {
          "active": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "current_settings": {
            "$ref": "#/definitions/ProjectSettingsSerializer",
            "description": "",
            "readOnly": false
          },
          "date_created": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "slug": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/User",
            "description": "",
            "readOnly": false
          }
        },
        "required": [
          "name",
          "slug",
          "user",
          "current_settings"
        ],
        "type": "object"
      },
      "ProjectSavedFilter": {
        "properties": {
          "filters": {
            "description": "",
            "readOnly": false,
            "type": "object"
          },
          "identifier": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "name",
          "filters"
        ],
        "type": "object"
      },
      "ProjectSettingsSerializer": {
        "properties": {
          "allowed_domains": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "blacklisted_domains": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "compare_crawl": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "crawl_gzip": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "extra_headers": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "google_analytics_account_email": {
            "description": "Keep email in case user delete his social auth connection",
            "readOnly": false,
            "type": "string"
          },
          "google_analytics_nb_days": {
            "description": "",
            "format": "int64",
            "maximum": 90,
            "minimum": 1,
            "readOnly": false,
            "type": "integer"
          },
          "google_analytics_site_id": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": false,
            "type": "integer"
          },
          "google_social_auth_id": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": false,
            "type": "integer"
          },
          "has_robots_txt": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "header_settings": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "max_depth": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 0,
            "readOnly": false,
            "type": "integer"
          },
          "max_nb_pages": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 1,
            "readOnly": false,
            "type": "integer"
          },
          "max_pages_per_sec": {
            "description": "",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 1,
            "readOnly": false,
            "type": "integer"
          },
          "respect_nofollow": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "sitemaps": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "start_urls": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "user_agent": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "start_urls",
          "max_nb_pages",
          "blacklisted_domains",
          "allowed_domains",
          "sitemaps",
          "header_settings"
        ],
        "type": "object"
      },
      "RewritingRuleSerializer": {
        "properties": {
          "ignore_case": {
            "description": "",
            "readOnly": false,
            "type": "boolean"
          },
          "regex": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "replace": {
            "description": "",
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "regex",
          "replace",
          "ignore_case"
        ],
        "type": "object"
      },
      "URLRewritingRulesSerializer": {
        "properties": {
          "rules": {
            "description": "",
            "items": {
              "$ref": "#/definitions/RewritingRuleSerializer"
            },
            "readOnly": false,
            "type": "array"
          },
          "urls": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "urls",
          "rules"
        ],
        "type": "object"
      },
      "UrlsAggsQueries": {
        "items": {
          "$ref": "#/definitions/UrlsAggsQuery"
        },
        "type": "array"
      },
      "UrlsAggsQuery": {
        "properties": {
          "aggs": {
            "description": "",
            "items": {
              "type": "object"
            },
            "readOnly": false,
            "type": "array"
          },
          "filters": {
            "description": "",
            "readOnly": false,
            "type": "object"
          }
        },
        "type": "object"
      },
      "UrlsQuery": {
        "properties": {
          "fields": {
            "description": "",
            "items": {
              "type": "string"
            },
            "readOnly": false,
            "type": "array"
          },
          "filters": {
            "description": "",
            "readOnly": false,
            "type": "object"
          },
          "sort": {
            "description": "",
            "items": {
              "type": "object"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "company_name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "date_joined": {
            "description": "",
            "format": "date-time",
            "readOnly": false,
            "type": "string"
          },
          "email": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "first_name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "is_organization": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "last_name": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "login": {
            "description": "",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "",
            "readOnly": false,
            "type": "string"
          },
          "url": {
            "description": "",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}