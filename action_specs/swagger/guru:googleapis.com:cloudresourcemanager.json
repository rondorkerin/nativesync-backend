{
  "type": "api",
  "key": "guru:googleapis.com:cloudresourcemanager",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "The Google Cloud Resource Manager API provides methods for creating, reading, and updating project metadata.",
    "title": "Google Cloud Resource Manager",
    "version": "v1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png"
    },
    "x-origin": {
      "format": "google",
      "url": "https://www.googleapis.com/discovery/v1/apis/cloudresourcemanager/v1/rest",
      "version": "v1"
    },
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "cloudresourcemanager"
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "cloudresourcemanager.googleapis.com",
    "basePath": "/",
    "info": {
      "contact": {
        "name": "Google",
        "url": "https://google.com"
      },
      "description": "The Google Cloud Resource Manager API provides methods for creating, reading, and updating project metadata.",
      "title": "Google Cloud Resource Manager",
      "version": "v1",
      "x-apiClientRegistration": {
        "url": "https://console.developers.google.com"
      },
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png"
      },
      "x-origin": {
        "format": "google",
        "url": "https://www.googleapis.com/discovery/v1/apis/cloudresourcemanager/v1/rest",
        "version": "v1"
      },
      "x-preferred": true,
      "x-providerName": "googleapis.com",
      "x-serviceName": "cloudresourcemanager"
    },
    "externalDocs": {
      "url": "https://cloud.google.com/resource-manager"
    },
    "securityDefinitions": {
      "Oauth2": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 authentication",
        "flow": "implicit",
        "scopes": {
          "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
          "https://www.googleapis.com/auth/cloud-platform.read-only": "View your data across Google Cloud Platform services"
        },
        "type": "oauth2"
      }
    },
    "parameters": {
      "$.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "type": "string"
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "type": "string"
      },
      "alt": {
        "default": "json",
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "type": "string"
      },
      "bearer_token": {
        "description": "OAuth bearer token.",
        "in": "query",
        "name": "bearer_token",
        "type": "string"
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "type": "string"
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "type": "string"
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "type": "string"
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "type": "string"
      },
      "pp": {
        "default": true,
        "description": "Pretty-print response.",
        "in": "query",
        "name": "pp",
        "type": "boolean"
      },
      "prettyPrint": {
        "default": true,
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "type": "boolean"
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "type": "string"
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "type": "string"
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "type": "string"
      }
    },
    "tags": [
      {
        "name": "operations"
      },
      {
        "name": "organizations"
      },
      {
        "name": "projects"
      }
    ],
    "paths": {
      "/v1/organizations:search": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Searches Organization resources that are visible to the user and satisfy the specified filter. This method returns Organizations in an unspecified order. New Organizations do not necessarily appear at the end of the results.",
          "operationId": "cloudresourcemanager.organizations.search",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/SearchOrganizationsRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/SearchOrganizationsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "organizations"
          ]
        }
      },
      "/v1/projects": {
        "get": {
          "description": "Lists Projects that are visible to the user and satisfy the specified filter. This method returns Projects in an unspecified order. New Projects do not necessarily appear at the end of the list.",
          "operationId": "cloudresourcemanager.projects.list",
          "parameters": [
            {
              "description": "A pagination token returned from a previous call to ListProjects that indicates from where listing should continue. Optional.",
              "in": "query",
              "name": "pageToken",
              "type": "string"
            },
            {
              "description": "The maximum number of Projects to return in the response. The server can return fewer Projects than requested. If unspecified, server picks an appropriate default. Optional.",
              "in": "query",
              "name": "pageSize",
              "type": "integer"
            },
            {
              "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: + `name` + `id` + labels.key where *key* is the name of a label Some examples of using labels as filters: |Filter|Description| |------|-----------| |name:*|The project has a name.| |name:Howl|The project's name is `Howl` or `howl`.| |name:HOWL|Equivalent to above.| |NAME:howl|Equivalent to above.| |labels.color:*|The project has the label `color`.| |labels.color:red|The project's label `color` has the value `red`.| |labels.color:redÂ label.size:big|The project's label `color` has the value `red` and its label `size` has the value `big`. Optional.",
              "in": "query",
              "name": "filter",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListProjectsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Request that a new Project be created. The result is an Operation which can be used to track the creation process. It is automatically deleted after a few hours, so there is no need to call DeleteOperation. Our SLO permits Project creation to take up to 30 seconds at the 90th percentile. As of 2016-08-29, we are observing 6 seconds 50th percentile latency. 95th percentile latency is around 11 seconds. We recommend polling at the 5th second with an exponential backoff.",
          "operationId": "cloudresourcemanager.projects.create",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{projectId}": {
        "delete": {
          "description": "Marks the Project identified by the specified `project_id` (for example, `my-project-123`) for deletion. This method will only affect the Project if the following criteria are met: + The Project does not have a billing account associated with it. + The Project has a lifecycle state of ACTIVE. This method changes the Project's lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion starts at an unspecified time, at which point the Project is no longer accessible. Until the deletion completes, you can check the lifecycle state checked by retrieving the Project with GetProject, and the Project remains visible to ListProjects. However, you cannot update the project. After the deletion completes, the Project is not retrievable by the GetProject and ListProjects methods. The caller must have modify permissions for this Project.",
          "operationId": "cloudresourcemanager.projects.delete",
          "parameters": [
            {
              "description": "The Project ID (for example, `foo-bar-123`). Required.",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Empty"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "get": {
          "description": "Retrieves the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have read permissions for this Project.",
          "operationId": "cloudresourcemanager.projects.get",
          "parameters": [
            {
              "description": "The Project ID (for example, `my-project-123`). Required.",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "put": {
          "description": "Updates the attributes of the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have modify permissions for this Project.",
          "operationId": "cloudresourcemanager.projects.update",
          "parameters": [
            {
              "description": "The project ID (for example, `my-project-123`). Required.",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{projectId}:undelete": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Restores the Project identified by the specified `project_id` (for example, `my-project-123`). You can only use this method for a Project that has a lifecycle state of DELETE_REQUESTED. After deletion starts, the Project cannot be restored. The caller must have modify permissions for this Project.",
          "operationId": "cloudresourcemanager.projects.undelete",
          "parameters": [
            {
              "description": "The project ID (for example, `foo-bar-123`). Required.",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/UndeleteProjectRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Empty"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{resource}:getIamPolicy": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Returns the IAM access control policy for the specified Project. Permission is denied if the policy or the resource does not exist.",
          "operationId": "cloudresourcemanager.projects.getIamPolicy",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy is being requested. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/GetIamPolicyRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{resource}:setIamPolicy": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Sets the IAM access control policy for the specified Project. Replaces any existing policy. The following constraints apply when using `setIamPolicy()`: + Project does not support `allUsers` and `allAuthenticatedUsers` as `members` in a `Binding` of a `Policy`. + The owner role can be granted only to `user` and `serviceAccount`. + Service accounts can be made owners of a project directly without any restrictions. However, to be added as an owner, a user must be invited via Cloud Platform console and must accept the invitation. + A user cannot be granted the owner role using `setIamPolicy()`. The user must be granted the owner role using the Cloud Platform Console and must explicitly accept the invitation. + Invitations to grant the owner role cannot be sent using `setIamPolicy()`; they must be sent only using the Cloud Platform Console. + Membership changes that leave the project without any owners that have accepted the Terms of Service (ToS) will be rejected. + There must be at least one owner who has accepted the Terms of Service (ToS) agreement in the policy. Calling `setIamPolicy()` to to remove the last ToS-accepted owner from the policy will fail. This restriction also applies to legacy projects that no longer have owners who have accepted the ToS. Edits to IAM policies will be rejected until the lack of a ToS-accepting owner is rectified. + Calling this method requires enabling the App Engine Admin API. Note: Removing service accounts from policies or changing their roles can render services completely inoperable. It is important to understand how the service account is being used before removing or updating its roles.",
          "operationId": "cloudresourcemanager.projects.setIamPolicy",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy is being specified. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/SetIamPolicyRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{resource}:testIamPermissions": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Returns permissions that a caller has on the specified Project.",
          "operationId": "cloudresourcemanager.projects.testIamPermissions",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy detail is being requested. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/TestIamPermissionsRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/TestIamPermissionsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/{name}": {
        "get": {
          "description": "Fetches an Organization resource identified by the specified resource name.",
          "operationId": "cloudresourcemanager.organizations.get",
          "parameters": [
            {
              "description": "The resource name of the Organization to fetch, e.g. \"organizations/1234\".",
              "in": "path",
              "name": "name",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Organization"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "organizations"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ]
      },
      "/v1/{resource}:getIamPolicy": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Gets the access control policy for an Organization resource. May be empty if no such policy or resource exists. The `resource` field should be the organization's resource name, e.g. \"organizations/123\".",
          "operationId": "cloudresourcemanager.organizations.getIamPolicy",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy is being requested. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/GetIamPolicyRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "organizations"
          ]
        }
      },
      "/v1/{resource}:setIamPolicy": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Sets the access control policy on an Organization resource. Replaces any existing policy. The `resource` field should be the organization's resource name, e.g. \"organizations/123\".",
          "operationId": "cloudresourcemanager.organizations.setIamPolicy",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy is being specified. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/SetIamPolicyRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "organizations"
          ]
        }
      },
      "/v1/{resource}:testIamPermissions": {
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Returns permissions that a caller has on the specified Organization. The `resource` field should be the organization's resource name, e.g. \"organizations/123\".",
          "operationId": "cloudresourcemanager.organizations.testIamPermissions",
          "parameters": [
            {
              "description": "REQUIRED: The resource for which the policy detail is being requested. `resource` is usually specified as a path. For example, a Project resource is specified as `projects/{project}`.",
              "in": "path",
              "name": "resource",
              "required": true,
              "type": "string",
              "x-reservedExpansion": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/TestIamPermissionsRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/TestIamPermissionsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          ],
          "tags": [
            "organizations"
          ]
        }
      }
    },
    "definitions": {
      "Binding": {
        "description": "Associates `members` with a `role`.",
        "properties": {
          "members": {
            "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` or `joe@example.com`. * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: A Google Apps domain name that represents all the users of that domain. For example, `google.com` or `example.com`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "role": {
            "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Empty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
        "type": "object"
      },
      "FolderOperation": {
        "description": "Metadata describing a long running folder operation",
        "properties": {
          "destinationParent": {
            "description": "The resource name of the folder or organization we are either creating the folder under or moving the folder to.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the folder.",
            "type": "string"
          },
          "operationType": {
            "description": "The type of this operation.",
            "enum": [
              "OPERATION_TYPE_UNSPECIFIED",
              "CREATE",
              "MOVE"
            ],
            "type": "string"
          },
          "sourceParent": {
            "description": "The resource name of the folder's parent. Only applicable when the operation_type is MOVE.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FolderOperationError": {
        "description": "A classification of the Folder Operation error.",
        "properties": {
          "errorMessageId": {
            "description": "The type of operation error experienced.",
            "enum": [
              "ERROR_TYPE_UNSPECIFIED",
              "FOLDER_HEIGHT_VIOLATION",
              "MAX_CHILD_FOLDERS_VIOLATION",
              "FOLDER_NAME_UNIQUENESS_VIOLATION",
              "RESOURCE_DELETED",
              "PARENT_DELETED",
              "CYCLE_INTRODUCED_ERROR",
              "FOLDER_ALREADY_BEING_MOVED",
              "FOLDER_TO_DELETE_NON_EMPTY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetIamPolicyRequest": {
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object"
      },
      "ListProjectsResponse": {
        "description": "A page of the response received from the ListProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.",
        "properties": {
          "nextPageToken": {
            "description": "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.",
            "type": "string"
          },
          "projects": {
            "description": "The list of Projects that matched the list filter. This list can be paginated.",
            "items": {
              "$ref": "#/definitions/Project"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "This resource represents a long-running operation that is the result of a network API call.",
        "properties": {
          "done": {
            "description": "If the value is `false`, it means the operation is still in progress. If true, the operation is completed, and either `error` or `response` is available.",
            "type": "boolean"
          },
          "error": {
            "$ref": "#/definitions/Status",
            "description": "The error result of the operation in case of failure."
          },
          "metadata": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "type": "object"
          },
          "name": {
            "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should have the format of `operations/some/unique/name`.",
            "type": "string"
          },
          "response": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Organization": {
        "description": "The root node in the resource hierarchy to which a particular entity's (e.g., company) resources belong.",
        "properties": {
          "creationTime": {
            "description": "Timestamp when the Organization was created. Assigned by the server. @OutputOnly",
            "type": "string"
          },
          "displayName": {
            "description": "A friendly string to be used to refer to the Organization in the UI. Assigned by the server, set to the firm name of the Google For Work customer that owns this organization. @OutputOnly",
            "type": "string"
          },
          "lifecycleState": {
            "description": "The organization's current lifecycle state. Assigned by the server. @OutputOnly",
            "enum": [
              "LIFECYCLE_STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETE_REQUESTED"
            ],
            "type": "string"
          },
          "name": {
            "description": "Output Only. The resource name of the organization. This is the organization's relative path in the API. Its format is \"organizations/[organization_id]\". For example, \"organizations/1234\".",
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/OrganizationOwner",
            "description": "The owner of this Organization. The owner should be specified on creation. Once set, it cannot be changed. This field is required."
          }
        },
        "type": "object"
      },
      "OrganizationOwner": {
        "description": "The entity that owns an Organization. The lifetime of the Organization and all of its descendants are bound to the `OrganizationOwner`. If the `OrganizationOwner` is deleted, the Organization and all its descendants will be deleted.",
        "properties": {
          "directoryCustomerId": {
            "description": "The Google for Work customer id used in the Directory API.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Policy": {
        "description": "Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources. A `Policy` consists of a list of `bindings`. A `Binding` binds a list of `members` to a `role`, where the members can be user accounts, Google groups, Google domains, and service accounts. A `role` is a named list of permissions defined by IAM. **Example** { \"bindings\": [ { \"role\": \"roles/owner\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-other-app@appspot.gserviceaccount.com\", ] }, { \"role\": \"roles/viewer\", \"members\": [\"user:sean@example.com\"] } ] } For a description of IAM and its features, see the [IAM developer's guide](https://cloud.google.com/iam).",
        "properties": {
          "bindings": {
            "description": "Associates a list of `members` to a `role`. Multiple `bindings` must not be specified for the same `role`. `bindings` with no members will result in an error.",
            "items": {
              "$ref": "#/definitions/Binding"
            },
            "type": "array"
          },
          "etag": {
            "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.",
            "format": "byte",
            "type": "string"
          },
          "version": {
            "description": "Version of the `Policy`. The default version is 0.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Project": {
        "description": "A Project is a high-level Google Cloud Platform entity. It is a container for ACLs, APIs, AppEngine Apps, VMs, and other Google Cloud Platform resources.",
        "properties": {
          "createTime": {
            "description": "Creation time. Read-only.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this Project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: \"environment\" : \"dev\" Read-write.",
            "type": "object"
          },
          "lifecycleState": {
            "description": "The Project lifecycle state. Read-only.",
            "enum": [
              "LIFECYCLE_STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETE_REQUESTED",
              "DELETE_IN_PROGRESS"
            ],
            "type": "string"
          },
          "name": {
            "description": "The user-assigned display name of the Project. It must be 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: My Project Read-write.",
            "type": "string"
          },
          "parent": {
            "$ref": "#/definitions/ResourceId",
            "description": "An optional reference to a parent Resource. The only supported parent type is \"organization\". Once set, the parent cannot be modified. Read-write."
          },
          "projectId": {
            "description": "The unique, user-assigned ID of the Project. It must be 6 to 30 lowercase letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: tokyo-rain-123 Read-only after creation.",
            "type": "string"
          },
          "projectNumber": {
            "description": "The number uniquely identifying the project. Example: 415104041262 Read-only.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectCreationStatus": {
        "description": "A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.",
        "properties": {
          "createTime": {
            "description": "Creation time of the project creation workflow.",
            "type": "string"
          },
          "gettable": {
            "description": "True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete.",
            "type": "boolean"
          },
          "ready": {
            "description": "True if the project creation process is complete.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ResourceId": {
        "description": "A container to reference an id for any resource type. A `resource` in Google Cloud Platform is a generic term for something you (a developer) may want to interact with through one of our API's. Some examples are an AppEngine app, a Compute Engine instance, a Cloud SQL database, and so on.",
        "properties": {
          "id": {
            "description": "Required field for the type-specific id. This should correspond to the id used in the type-specific API's.",
            "type": "string"
          },
          "type": {
            "description": "Required field representing the resource type this id is for. At present, the only valid type is \"organization\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchOrganizationsRequest": {
        "description": "The request sent to the `SearchOrganizations` method.",
        "properties": {
          "filter": {
            "description": "An optional query string used to filter the Organizations to return in the response. Filter rules are case-insensitive. Organizations may be filtered by `owner.directoryCustomerId` or by `domain`, where the domain is a Google for Work domain, for example: |Filter|Description| |------|-----------| |owner.directorycustomerid:123456789|Organizations with `owner.directory_customer_id` equal to `123456789`.| |domain:google.com|Organizations corresponding to the domain `google.com`.| This field is optional.",
            "type": "string"
          },
          "pageSize": {
            "description": "The maximum number of Organizations to return in the response. This field is optional.",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "A pagination token returned from a previous call to `SearchOrganizations` that indicates from where listing should continue. This field is optional.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchOrganizationsResponse": {
        "description": "The response returned from the `SearchOrganizations` method.",
        "properties": {
          "nextPageToken": {
            "description": "A pagination token to be used to retrieve the next page of results. If the result is too large to fit within the page size specified in the request, this field will be set with a token that can be used to fetch the next page of results. If this field is empty, it indicates that this response contains the last page of results.",
            "type": "string"
          },
          "organizations": {
            "description": "The list of Organizations that matched the search query, possibly paginated.",
            "items": {
              "$ref": "#/definitions/Organization"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SetIamPolicyRequest": {
        "description": "Request message for `SetIamPolicy` method.",
        "properties": {
          "policy": {
            "$ref": "#/definitions/Policy",
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model is designed to be: - Simple to use and understand for most users - Flexible enough to meet unexpected needs # Overview The `Status` message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers *understand* and *resolve* the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package `google.rpc` which can be used for common error conditions. # Language mapping The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire format. When the `Status` message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C. # Other uses The error model and the `Status` message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments. Example uses of this error model include: - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the normal response to indicate the partial errors. - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error reporting purpose. - Batch operations. If a client uses batch request and batch response, the `Status` message should be used directly inside batch response, one for each error sub-response. - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the `Status` message. - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any stripping needed for security/privacy reasons.",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There will be a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestIamPermissionsRequest": {
        "description": "Request message for `TestIamPermissions` method.",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TestIamPermissionsResponse": {
        "description": "Response message for `TestIamPermissions` method.",
        "properties": {
          "permissions": {
            "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UndeleteProjectRequest": {
        "description": "The request sent to the UndeleteProject method.",
        "type": "object"
      }
    }
  }
}