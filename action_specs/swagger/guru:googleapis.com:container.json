{
  "type": "api",
  "key": "guru:googleapis.com:container",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Builds and manages clusters that run container-based applications, powered by open source Kubernetes technology.",
    "title": "Google Container Engine",
    "version": "v1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png"
    },
    "x-origin": {
      "format": "google",
      "url": "https://www.googleapis.com/discovery/v1/apis/container/v1/rest",
      "version": "v1"
    },
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "container"
  },
  "public": true,
  "swagger": {
    "swagger": "2.0",
    "schemes": [
      "https"
    ],
    "host": "container.googleapis.com",
    "basePath": "/",
    "info": {
      "contact": {
        "name": "Google",
        "url": "https://google.com"
      },
      "description": "Builds and manages clusters that run container-based applications, powered by open source Kubernetes technology.",
      "title": "Google Container Engine",
      "version": "v1",
      "x-apiClientRegistration": {
        "url": "https://console.developers.google.com"
      },
      "x-logo": {
        "url": "https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png"
      },
      "x-origin": {
        "format": "google",
        "url": "https://www.googleapis.com/discovery/v1/apis/container/v1/rest",
        "version": "v1"
      },
      "x-preferred": true,
      "x-providerName": "googleapis.com",
      "x-serviceName": "container"
    },
    "externalDocs": {
      "url": "https://cloud.google.com/container-engine/"
    },
    "securityDefinitions": {
      "Oauth2": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 authentication",
        "flow": "implicit",
        "scopes": {
          "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
        },
        "type": "oauth2"
      }
    },
    "parameters": {
      "$.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "type": "string"
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "type": "string"
      },
      "alt": {
        "default": "json",
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "type": "string"
      },
      "bearer_token": {
        "description": "OAuth bearer token.",
        "in": "query",
        "name": "bearer_token",
        "type": "string"
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "type": "string"
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "type": "string"
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "type": "string"
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "type": "string"
      },
      "pp": {
        "default": true,
        "description": "Pretty-print response.",
        "in": "query",
        "name": "pp",
        "type": "boolean"
      },
      "prettyPrint": {
        "default": true,
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "type": "boolean"
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "type": "string"
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "type": "string"
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "type": "string"
      }
    },
    "tags": [
      {
        "name": "projects"
      }
    ],
    "paths": {
      "/v1/projects/{projectId}/zones/{zone}/clusters": {
        "get": {
          "description": "Lists all clusters owned by a project in either the specified zone or all zones.",
          "operationId": "container.projects.zones.clusters.list",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides, or \"-\" for all zones.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListClustersResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the cluster creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range is being used by the cluster.",
          "operationId": "container.projects.zones.clusters.create",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/CreateClusterRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}": {
        "delete": {
          "description": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster (e.g. load balancer resources) will not be deleted if they weren't present at the initial create time.",
          "operationId": "container.projects.zones.clusters.delete",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster to delete.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "get": {
          "description": "Gets the details of a specific cluster.",
          "operationId": "container.projects.zones.clusters.get",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster to retrieve.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Cluster"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "put": {
          "description": "Updates the settings of a specific cluster.",
          "operationId": "container.projects.zones.clusters.update",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster to upgrade.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/UpdateClusterRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools": {
        "get": {
          "description": "Lists the node pools for a cluster.",
          "operationId": "container.projects.zones.clusters.nodePools.list",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListNodePoolsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ],
        "post": {
          "description": "Creates a node pool for a cluster.",
          "operationId": "container.projects.zones.clusters.nodePools.create",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/CreateNodePoolRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        }
      },
      "/v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}": {
        "delete": {
          "description": "Deletes a node pool from a cluster.",
          "operationId": "container.projects.zones.clusters.nodePools.delete",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the node pool to delete.",
              "in": "path",
              "name": "nodePoolId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "get": {
          "description": "Retrieves the node pool requested.",
          "operationId": "container.projects.zones.clusters.nodePools.get",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the cluster.",
              "in": "path",
              "name": "clusterId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the node pool.",
              "in": "path",
              "name": "nodePoolId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/NodePool"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ]
      },
      "/v1/projects/{projectId}/zones/{zone}/operations": {
        "get": {
          "description": "Lists all operations in a project in a specific zone or all zones.",
          "operationId": "container.projects.zones.operations.list",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) to return operations for, or `-` for all zones.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ListOperationsResponse"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ]
      },
      "/v1/projects/{projectId}/zones/{zone}/operations/{operationId}": {
        "get": {
          "description": "Gets the specified operation.",
          "operationId": "container.projects.zones.operations.get",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            },
            {
              "description": "The server-assigned `name` of the operation.",
              "in": "path",
              "name": "operationId",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Operation"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ]
      },
      "/v1/projects/{projectId}/zones/{zone}/serverconfig": {
        "get": {
          "description": "Returns configuration info about the Container Engine service.",
          "operationId": "container.projects.zones.getServerconfig",
          "parameters": [
            {
              "description": "The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
              "in": "path",
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) to return operations for.",
              "in": "path",
              "name": "zone",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/ServerConfig"
              }
            }
          },
          "security": [
            {
              "Oauth2": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "tags": [
            "projects"
          ]
        },
        "parameters": [
          {
            "$ref": "#/parameters/access_token"
          },
          {
            "$ref": "#/parameters/alt"
          },
          {
            "$ref": "#/parameters/bearer_token"
          },
          {
            "$ref": "#/parameters/callback"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/key"
          },
          {
            "$ref": "#/parameters/oauth_token"
          },
          {
            "$ref": "#/parameters/pp"
          },
          {
            "$ref": "#/parameters/prettyPrint"
          },
          {
            "$ref": "#/parameters/quotaUser"
          },
          {
            "$ref": "#/parameters/upload_protocol"
          },
          {
            "$ref": "#/parameters/uploadType"
          },
          {
            "$ref": "#/parameters/$.xgafv"
          }
        ]
      }
    },
    "definitions": {
      "AddonsConfig": {
        "description": "Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.",
        "properties": {
          "horizontalPodAutoscaling": {
            "$ref": "#/definitions/HorizontalPodAutoscaling",
            "description": "Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods."
          },
          "httpLoadBalancing": {
            "$ref": "#/definitions/HttpLoadBalancing",
            "description": "Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster."
          }
        },
        "type": "object"
      },
      "Cluster": {
        "description": "A Google Container Engine cluster.",
        "properties": {
          "addonsConfig": {
            "$ref": "#/definitions/AddonsConfig",
            "description": "Configurations for the various addons available to run in the cluster."
          },
          "clusterIpv4Cidr": {
            "description": "The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.",
            "type": "string"
          },
          "createTime": {
            "description": "[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "type": "string"
          },
          "currentMasterVersion": {
            "description": "[Output only] The current software version of the master endpoint.",
            "type": "string"
          },
          "currentNodeCount": {
            "description": "[Output only] The number of nodes currently in the cluster.",
            "format": "int32",
            "type": "integer"
          },
          "currentNodeVersion": {
            "description": "[Output only] The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.",
            "type": "string"
          },
          "description": {
            "description": "An optional description of this cluster.",
            "type": "string"
          },
          "endpoint": {
            "description": "[Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.",
            "type": "string"
          },
          "initialClusterVersion": {
            "description": "[Output only] The software version of the master endpoint and kubelets used in the cluster when it was first created. The version can be upgraded over time.",
            "type": "string"
          },
          "initialNodeCount": {
            "description": "The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"node_config\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time.",
            "format": "int32",
            "type": "integer"
          },
          "instanceGroupUrls": {
            "description": "[Output only] The resource URLs of [instance groups](/compute/docs/instance-groups/) associated with this cluster.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "locations": {
            "description": "The list of Google Compute Engine [locations](/compute/docs/zones#available) in which the cluster's nodes should be located.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "loggingService": {
            "description": "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com` - the Google Cloud Logging service. * `none` - no logs will be exported from the cluster. * if left as an empty string,`logging.googleapis.com` will be used.",
            "type": "string"
          },
          "masterAuth": {
            "$ref": "#/definitions/MasterAuth",
            "description": "The authentication information for accessing the master endpoint."
          },
          "monitoringService": {
            "description": "The monitoring service the cluster should use to write metrics. Currently available options: * `monitoring.googleapis.com` - the Google Cloud Monitoring service. * `none` - no metrics will be exported from the cluster. * if left as an empty string, `monitoring.googleapis.com` will be used.",
            "type": "string"
          },
          "name": {
            "description": "The name of this cluster. The name must be unique within this project and zone, and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.",
            "type": "string"
          },
          "network": {
            "description": "The name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.",
            "type": "string"
          },
          "nodeConfig": {
            "$ref": "#/definitions/NodeConfig",
            "description": "Parameters used in creating the cluster's nodes. See `nodeConfig` for the description of its properties. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"initial_node_count\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. If unspecified, the defaults are used."
          },
          "nodeIpv4CidrSize": {
            "description": "[Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range.",
            "format": "int32",
            "type": "integer"
          },
          "nodePools": {
            "description": "The node pools associated with this cluster. When creating a new cluster, only a single node pool should be specified. This field should not be set if \"node_config\" or \"initial_node_count\" are specified.",
            "items": {
              "$ref": "#/definitions/NodePool"
            },
            "type": "array"
          },
          "selfLink": {
            "description": "[Output only] Server-defined URL for the resource.",
            "type": "string"
          },
          "servicesIpv4Cidr": {
            "description": "[Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.",
            "type": "string"
          },
          "status": {
            "description": "[Output only] The current status of this cluster.",
            "enum": [
              "STATUS_UNSPECIFIED",
              "PROVISIONING",
              "RUNNING",
              "RECONCILING",
              "STOPPING",
              "ERROR"
            ],
            "type": "string"
          },
          "statusMessage": {
            "description": "[Output only] Additional information about the current status of this cluster, if available.",
            "type": "string"
          },
          "subnetwork": {
            "description": "The name of the Google Compute Engine [subnetwork](/compute/docs/subnetworks) to which the cluster is connected.",
            "type": "string"
          },
          "zone": {
            "description": "[Output only] The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the cluster resides.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterUpdate": {
        "description": "ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.",
        "properties": {
          "desiredAddonsConfig": {
            "$ref": "#/definitions/AddonsConfig",
            "description": "Configurations for the various addons available to run in the cluster."
          },
          "desiredMasterVersion": {
            "description": "The Kubernetes version to change the master to. The only valid value is the latest supported version. Use \"-\" to have the server automatically select the latest version.",
            "type": "string"
          },
          "desiredMonitoringService": {
            "description": "The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com\" - the Google Cloud Monitoring service * \"none\" - no metrics will be exported from the cluster",
            "type": "string"
          },
          "desiredNodePoolId": {
            "description": "The node pool to be upgraded. This field is mandatory if the \"desired_node_version\" or \"desired_image_family\" is specified and there is more than one node pool on the cluster.",
            "type": "string"
          },
          "desiredNodeVersion": {
            "description": "The Kubernetes version to change the nodes to (typically an upgrade). Use `-` to upgrade to the latest version supported by the server.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateClusterRequest": {
        "description": "CreateClusterRequest creates a cluster.",
        "properties": {
          "cluster": {
            "$ref": "#/definitions/Cluster",
            "description": "A [cluster resource](/container-engine/reference/rest/v1/projects.zones.clusters)"
          }
        },
        "type": "object"
      },
      "CreateNodePoolRequest": {
        "description": "CreateNodePoolRequest creates a node pool for a cluster.",
        "properties": {
          "nodePool": {
            "$ref": "#/definitions/NodePool",
            "description": "The node pool to create."
          }
        },
        "type": "object"
      },
      "HorizontalPodAutoscaling": {
        "description": "Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.",
        "properties": {
          "disabled": {
            "description": "Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HttpLoadBalancing": {
        "description": "Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.",
        "properties": {
          "disabled": {
            "description": "Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ListClustersResponse": {
        "description": "ListClustersResponse is the result of ListClustersRequest.",
        "properties": {
          "clusters": {
            "description": "A list of clusters in the project in the specified zone, or across all ones.",
            "items": {
              "$ref": "#/definitions/Cluster"
            },
            "type": "array"
          },
          "missingZones": {
            "description": "If any zones are listed here, the list of clusters returned may be missing those zones.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListNodePoolsResponse": {
        "description": "ListNodePoolsResponse is the result of ListNodePoolsRequest.",
        "properties": {
          "nodePools": {
            "description": "A list of node pools for a cluster.",
            "items": {
              "$ref": "#/definitions/NodePool"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListOperationsResponse": {
        "description": "ListOperationsResponse is the result of ListOperationsRequest.",
        "properties": {
          "missingZones": {
            "description": "If any zones are listed here, the list of operations returned may be missing the operations from those zones.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "operations": {
            "description": "A list of operations in the project in the specified zone.",
            "items": {
              "$ref": "#/definitions/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MasterAuth": {
        "description": "The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.",
        "properties": {
          "clientCertificate": {
            "description": "[Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.",
            "type": "string"
          },
          "clientKey": {
            "description": "[Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.",
            "type": "string"
          },
          "clusterCaCertificate": {
            "description": "[Output only] Base64-encoded public certificate that is the root of trust for the cluster.",
            "type": "string"
          },
          "password": {
            "description": "The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password.",
            "type": "string"
          },
          "username": {
            "description": "The username to use for HTTP basic authentication to the master endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NodeConfig": {
        "description": "Parameters that describe the nodes in a cluster.",
        "properties": {
          "diskSizeGb": {
            "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
            "format": "int32",
            "type": "integer"
          },
          "machineType": {
            "description": "The name of a Google Compute Engine [machine type](/compute/docs/machine-types) (e.g. `n1-standard-1`). If unspecified, the default machine type is `n1-standard-1`.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved keys: \"instance-template\", \"kube-env\", \"startup-script\", and \"user-data\" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.",
            "type": "object"
          },
          "oauthScopes": {
            "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NodePool": {
        "description": "NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.",
        "properties": {
          "config": {
            "$ref": "#/definitions/NodeConfig",
            "description": "The node configuration of the pool."
          },
          "initialNodeCount": {
            "description": "The initial node count for the pool. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota.",
            "format": "int32",
            "type": "integer"
          },
          "instanceGroupUrls": {
            "description": "[Output only] The resource URLs of [instance groups](/compute/docs/instance-groups/) associated with this node pool.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the node pool.",
            "type": "string"
          },
          "selfLink": {
            "description": "Server-defined URL for the resource.",
            "type": "string"
          },
          "status": {
            "description": "The status of the nodes in this pool instance.",
            "enum": [
              "STATUS_UNSPECIFIED",
              "PROVISIONING",
              "RUNNING",
              "RUNNING_WITH_ERROR",
              "RECONCILING",
              "STOPPING",
              "ERROR"
            ],
            "type": "string"
          },
          "statusMessage": {
            "description": "[Output only] Additional information about the current status of this node pool instance, if available.",
            "type": "string"
          },
          "version": {
            "description": "The version of the Kubernetes of this node.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.",
        "properties": {
          "detail": {
            "description": "Detailed operation progress, if available.",
            "type": "string"
          },
          "name": {
            "description": "The server-assigned ID for the operation.",
            "type": "string"
          },
          "operationType": {
            "description": "The operation type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "CREATE_CLUSTER",
              "DELETE_CLUSTER",
              "UPGRADE_MASTER",
              "UPGRADE_NODES",
              "REPAIR_CLUSTER",
              "UPDATE_CLUSTER",
              "CREATE_NODE_POOL",
              "DELETE_NODE_POOL"
            ],
            "type": "string"
          },
          "selfLink": {
            "description": "Server-defined URL for the resource.",
            "type": "string"
          },
          "status": {
            "description": "The current status of the operation.",
            "enum": [
              "STATUS_UNSPECIFIED",
              "PENDING",
              "RUNNING",
              "DONE"
            ],
            "type": "string"
          },
          "statusMessage": {
            "description": "If an error has occurred, a textual description of the error.",
            "type": "string"
          },
          "targetLink": {
            "description": "Server-defined URL for the target of the operation.",
            "type": "string"
          },
          "zone": {
            "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the operation is taking place.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerConfig": {
        "description": "Container Engine service configuration.",
        "properties": {
          "defaultClusterVersion": {
            "description": "Version of Kubernetes the service deploys by default.",
            "type": "string"
          },
          "defaultImageFamily": {
            "description": "Default image family.",
            "type": "string"
          },
          "validImageFamilies": {
            "description": "List of valid image families.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "validNodeVersions": {
            "description": "List of valid node upgrade target versions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateClusterRequest": {
        "description": "UpdateClusterRequest updates the settings of a cluster.",
        "properties": {
          "update": {
            "$ref": "#/definitions/ClusterUpdate",
            "description": "A description of the update."
          }
        },
        "type": "object"
      }
    }
  }
}