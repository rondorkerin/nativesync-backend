{
  "type": "api",
  "key": "apigee:instagram",
  "info": {
    "title": "Instagram",
    "description": "Fast, beautiful and fun way to share your life with friends through a series of pictures."
  },
  "swagger": {
    "swagger": "2.0",
    "host": "api.instagram.com",
    "basePath": "/v1/",
    "schemes": [
      "https"
    ],
    "paths": {
      "/users/{user-id}": {
        "parameters": [
          {
            "name": "user-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the user whose information to retrieve, or \"self\" to reference the currently logged-in user."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get basic information about a user.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/users/#get_users"
          }
        }
      },
      "/users/self/feed": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "max_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media earlier than this max_id"
            },
            {
              "name": "min_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media later than this min_id"
            },
            {
              "name": "count",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": 1,
              "description": "Count of media to return"
            }
          ],
          "description": "See the authenticated user's feed.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/users/#get_users_feed"
          }
        }
      },
      "/users/{user-id}/media/recent": {
        "parameters": [
          {
            "name": "user-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the user whose recent media to retrieve."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "max_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media earlier than this max_id"
            },
            {
              "name": "min_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media later than this min_id"
            },
            {
              "name": "count",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": 1,
              "description": "Count of media to return"
            },
            {
              "name": "min_timestamp",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": -9223372036854776000,
              "maximum": 9223372036854776000,
              "description": "Return media after this UNIX timestamp"
            },
            {
              "name": "max_timestamp",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": -9223372036854776000,
              "maximum": 9223372036854776000,
              "description": "Return media before this UNIX timestamp"
            }
          ],
          "description": "Get the most recent media published by a user.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/users/#get_users_media_recent"
          }
        }
      },
      "/users/self/media/liked": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "max_like_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media liked before this id"
            },
            {
              "name": "count",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": 1,
              "description": "Count of media to return"
            }
          ],
          "description": "See the authenticated user's list of media they've liked.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/users/#get_users_liked_feed"
          }
        }
      },
      "/users/search": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "q",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "A query string."
            },
            {
              "name": "count",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": 1,
              "description": "Number of users to return"
            }
          ],
          "description": "Search for a user by name.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/users/#get_users_search"
          }
        }
      },
      "/users/{user-id}/follows": {
        "parameters": [
          {
            "name": "user-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the user to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get the list of users this user follows. Required scope: relationships",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/relationships/#get_users_follows"
          }
        }
      },
      "/users/{user-id}/followed-by": {
        "parameters": [
          {
            "name": "user-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the user to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get the list of users this user is followed by. Required scope: relationships",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/relationships/#get_users_followed_by"
          }
        }
      },
      "/users/self/requested-by": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "List the users who have requested this user's permission to follow. Required scope: relationships",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/relationships/#get_incoming_requests"
          }
        }
      },
      "/users/{user-id}/relationship": {
        "parameters": [
          {
            "name": "user-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the user to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get information about the current user's relationship (follow/following/etc) to another user. Required scope: relationships",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/relationships/#get_relationship"
          }
        },
        "post": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [],
          "description": "Modify the relationship between the current user and the target user. Required scope: relationships",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/relationships/#post_relationship"
          }
        }
      },
      "/media/{id}": {
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the media object to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get information about a media object.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/media/#get_media"
          }
        }
      },
      "/media/search": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "lat",
              "required": false,
              "in": "query",
              "type": "number",
              "description": "Latitude of the center search coordinate. If used, lng is required."
            },
            {
              "name": "lng",
              "required": false,
              "in": "query",
              "type": "number",
              "description": "Longitude of the center search coordinate. If used, lat is required."
            },
            {
              "name": "max_timestamp",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": -9223372036854776000,
              "maximum": 9223372036854776000,
              "description": "A unix timestamp. All media returned will be taken earlier than this timestamp."
            },
            {
              "name": "min_timestamp",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": -9223372036854776000,
              "maximum": 9223372036854776000,
              "description": "A unix timestamp. All media returned will be taken later than this timestamp."
            },
            {
              "name": "distance",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": 1,
              "default": 1000,
              "description": "Search distance, in meters. Default is 1km (distance=1000), max distance is 5km (5000)"
            }
          ],
          "description": "Get information about a media object.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/media/#get_media_search"
          }
        }
      },
      "/media/popular": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get a list of what media is most popular at the moment.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/media/#get_media_popular"
          }
        }
      },
      "/media/{media-id}/comments": {
        "parameters": [
          {
            "name": "media-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the media object to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get a full list of comments on a media. Required scope: comments",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/comments/#get_media_comments"
          }
        },
        "post": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [],
          "description": "Create a comment on a media. Required scope: comments",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/comments/#post_media_comments"
          }
        }
      },
      "/media/{media-id}/comments/{comment-id}": {
        "parameters": [
          {
            "name": "media-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the media object to reference."
          },
          {
            "name": "comment-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the comment to delete."
          }
        ],
        "delete": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Remove a comment either on the authenticated user's media or authored by the authenticated user. Required scope: comments",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/comments/#delete_media_comments"
          }
        }
      },
      "/media/{media-id}/likes": {
        "parameters": [
          {
            "name": "media-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the media object to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get a list of users who have liked this media. Required scope: likes",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/likes/#get_media_likes"
          }
        },
        "post": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Set a like on this media by the currently authenticated user. Required scope: likes",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/likes/#post_media_likes"
          }
        },
        "delete": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Remove a like on this media by the currently authenticated user. Required scope: likes",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/likes/#delete_media_likes"
          }
        }
      },
      "/tags/{tag-name}": {
        "parameters": [
          {
            "name": "tag-name",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The name of the tag to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get information about a tag object.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/tags/#get_tags"
          }
        }
      },
      "/tags/{tag-name}/media/recent": {
        "parameters": [
          {
            "name": "tag-name",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The name of the tag to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "max_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media after this max_id"
            },
            {
              "name": "min_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media before this min_id"
            }
          ],
          "description": "Get a list of recently tagged media.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/tags/#get_tags_media_recent"
          }
        }
      },
      "/tags/search": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "q",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Valid tag name without a leading #. (eg. snow, nofilter)"
            }
          ],
          "description": "Search for tags by name.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/tags/#get_tags_search"
          }
        }
      },
      "/locations/{location-id}": {
        "parameters": [
          {
            "name": "location-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the location to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "description": "Get information about a location.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/locations/#get_locations"
          }
        }
      },
      "/locations/{location-id}/media/recent": {
        "parameters": [
          {
            "name": "location-id",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The ID of the location to reference."
          }
        ],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "max_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media after this max_id"
            },
            {
              "name": "min_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Return media before this min_id"
            },
            {
              "name": "min_timestamp",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": -9223372036854776000,
              "maximum": 9223372036854776000,
              "description": "Return media after this UNIX timestamp"
            },
            {
              "name": "max_timestamp",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": -9223372036854776000,
              "maximum": 9223372036854776000,
              "description": "Return media before this UNIX timestamp"
            }
          ],
          "description": "Get a list of recent media objects from a given location.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/locations/#get_locations_media_recent"
          }
        }
      },
      "/locations/search": {
        "parameters": [],
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "lat",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Latitude of the center search coordinate. If used, lng is required."
            },
            {
              "name": "lng",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Longitude of the center search coordinate. If used, lat is required."
            },
            {
              "name": "foursquare_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Returns a location mapped off of a foursquare v1 api location id. If used, you are not required to use lat and lng. Note that this method is deprecated; you should use the new foursquare IDs with V2 of their API."
            },
            {
              "name": "foursquare_v2_id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "Returns a location mapped off of a foursquare v2 api location id. If used, you are not required to use lat and lng."
            },
            {
              "name": "distance",
              "required": false,
              "in": "query",
              "type": "integer",
              "minimum": 1,
              "default": 1000,
              "description": "Search distance, in meters. Default is 1km (distance=1000), max distance is 5km (5000)"
            }
          ],
          "description": "Search for a location by name and geographic coordinate.",
          "externalDocs": {
            "url": "http://instagr.am/developer/endpoints/locations/#get_locations_search"
          }
        }
      },
      "/subscriptions": {
        "parameters": [],
        "post": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "verify_token",
              "required": true,
              "in": "query",
              "type": "string"
            },
            {
              "name": "client_id",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Client ID of your application."
            },
            {
              "name": "client_secret",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Client secret of your application."
            }
          ],
          "description": "Creates a subscription to receive notifications when a new photos are posted in an arbitrary geographical location as defined by a center point and radius.",
          "externalDocs": {
            "url": "http://instagr.am/developer/realtime"
          }
        },
        "get": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "client_id",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Client ID of your application."
            },
            {
              "name": "client_secret",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Client secret of your application."
            }
          ],
          "description": "Returns your current subscriptions.",
          "externalDocs": {
            "url": "http://instagr.am/developer/realtime"
          }
        },
        "delete": {
          "responses": {
            "200": {
              "description": "Successful Response"
            }
          },
          "parameters": [
            {
              "name": "id",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "The ID of the subscription you want to delete. Either this or \"object\" is required."
            },
            {
              "name": "object",
              "required": false,
              "in": "query",
              "type": "string",
              "description": "The object type of the subscription you want to delete, or \"all\" to clear all subscriptions.",
              "enum": [
                "all",
                "user",
                "tag",
                "location",
                "geography"
              ]
            },
            {
              "name": "client_id",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Client ID of your application."
            },
            {
              "name": "client_secret",
              "required": true,
              "in": "query",
              "type": "string",
              "description": "Client secret of your application."
            }
          ],
          "description": "Deletes a subscription by object type or ID.",
          "externalDocs": {
            "url": "http://instagr.am/developer/realtime"
          }
        }
      }
    },
    "info": {
      "title": "Instagram",
      "description": "Fast, beautiful and fun way to share your life with friends through a series of pictures."
    }
  },
  "public": true
}